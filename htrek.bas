10 REM (VERSION "STREK7", 1/12/75 RCL)
20 REM 
30 REM 
40 REM ***  *** STAR TREK *** ***
50 REM *** SIMULATION OF A MISSION OF THE STARSHIP ENTERPRISE.
60 REM *** AS SEEN ON THE STAR TREK TV SHOW.
70 REM *** ORIGINAL PROGRAM BY MIKE MAYFIELD, MODIFIED VERSION
80 REM *** PUBLISHED IN DEC'S "101 BASIC GAMES", BY DAVE AHL.
90 REM *** MODIFICATIONS TO THE LATTER (PLUS DEBUGGING) BY
100 REM *** BOB LEEDOM -- APRIL & DECEMBER 1974,
110 REM *** WITH A LITTLE HELP FROM HIS FRIENDS ...
120 REM *** COMMENTS, EPITHETS, AND SUGGESTIONS SOLICITED
130 REM *** ADDRESS TO: R.C.LEEDOM
140 REM *** WESTINGHOUSE DEFENSE & ELECTRONIC SYSTEMS CNTR.
150 REM *** BOX 745, M.S. 338 BALTIMORE, MD 21203
160 RANDOMIZE 4711
170 PRINT TAB(15); "* * * STAR TREK * * *"
250 DIM Z$[72]
251 DIM Q$[72]
252 DIM R$[72]
253 DIM S$[72]
260 DIM G1$[150]
261 DIM G2$[16]
262 DIM G3$[3]
263 DIM G4$[3]
270 REM
280 Z$="                                                                        "
290 Q$="                                                                        "
300 R$="                                                                        "
310 S$="                                                                        "
320 REM
330 DIM GALAXY[8,8]
331 DIM C[9,2]
332 DIM K[3,3]
333 DIM N[3]
334 DIM Z[8,8]
340 DIM O1$[40]
341 DIM C$[10]
350 DIM A1$[20]
351 DIM T$[6]
360 DIM D$[96]
361 DIM O3$[60]
370 T=INT(RND(1)*20+20)*100
380 T0=T
390 T9=30
400 D0=0
410 E0=3000
420 E=E0
430 P=10
440 P0=P
450 S9=200
460 S=0
470 DEF FND(D)=SQR((K[I,1]-S1)^2+(K[I,2]-S2)^2)
480 REM INITIALIZE ENTERPRISE'S POSITION
490 Q1=INT(RND(1)*8+1)
500 Q2=INT(RND(1)*8+1)
510 S1=INT(RND(1)*8+1)
520 S2=INT(RND(1)*8+1)
530 MAT C=ZER
540 C[3,1]=-1
550 C[2,1]=-1
560 C[4,1]=-1
570 C[4,2]=-1
580 C[5,2]=-1
590 C[6,2]=-1
600 C[1,2]=1
610 C[2,2]=1
620 C[6,1]=1
630 C[7,1]=1
640 C[8,1]=1
650 C[8,2]=1
660 C[9,2]=1
670 DIM DEVICE[8]
680 FOR I=1 TO 8
690   DEVICE[1]=0
700 NEXT I 
710 A1$="NSLPTSDCX"
720 D$="WARP ENGINESS.R. SENSORSL.R. SENSORSPHASER CNTRL"
730 D$=D$,"PHOTON TUBESDAMAGE CNTRL.SHIELD CNTRL.COMPUTER"
740 G4$="III"
750 G1$="ANTARES.SIRIUS.RIGEL.DENEB.PROCYON.CAPELLA.VEGA."
760 G1$=G1$,"BETELGEUSE.CANOPUS.ALDEBARAN.ALTAIR.REGULUS."
770 G1$=G1$,"SAGITTARIUS.ARCTURUS.POLLUX.SPICA."
780 B9=0
790 K9=0
800 A1$="NSLPTSDCX"
810 REM SET UP WHAT EXISTS IN GALAXY ...
820 FOR I=1 TO 8
830   FOR J=1 TO 8
840     R1=RND(1)
850     IF R1>.98 THEN GOTO 0900
860     IF R1>.95 THEN GOTO 0930
870     IF R1>.8 THEN GOTO 0960 
880     K3=0
890     GOTO 0980
900     K3=3
910     K9=K9+3
920     GOTO 0980
930     K3=2
940     K9=K9+2
950     GOTO 0980
960     K3=1
970     K9=K9+1
980     R1=RND(1)
990     IF R1>.96 THEN GOTO 1020
1000     B3=0
1010     GOTO 1040 
1020     B3=1
1030     B9=B9+1
1040     S3=INT(RND(1)*8+1)
1050     GALAXY[I,J]=K3*100+B3*10+S3
1060     REM K3=#KLINGONS B3=#STARBASES S3=#STARS
1070     Z[I,J]=0
1080   NEXT J
1090 NEXT I
1100 K7=K9
1110 DIM X$[2],X0$[5]
1120 X$=""
1130 X0$=" IS"
1140 IF B9<>0 THEN GOTO 1200
1150 B9=1
1160 IF GALAXY[6,3]>200 THEN GOTO 1190
1170 GALAXY[6,3]=GALAXY[6,3]+100
1180 K9=K9+1
1190 GALAXY[6,3]=GALAXY[6,3]+10
1200 IF B9=1 THEN GOTO 1230
1210 X$="S"
1220 X0$="ARE"
1230 PRINT "YOUR ORDERS ARE AS FOLLOWS:"
1240 PRINT " DESTROY THE ";K9;" KLINGON WARSHIPS WHICH HAVE INVADED"
1250 PRINT " THE GALAXY BEFORE THEY CAN ATTACK FEDERATION HEADQUARTERS"
1260 PRINT " ON STARDATE";T0+T9;". THIS GIVES YOU";T9;" DAYS. THERE";X0$
1270 PRINT " ";B9;" STARBASE";X$;" IN THE GALAXY FOR RESUPPLYING YOUR SHIP."
1280 PRINT 
1290 PRINT "HIT 'RETURN' WHEN READY TO ASSUME COMMAND ---"
1300 INPUT A$
1311 REM ------------------------------------------------------------------------
1312 REM                        NEW QUADRANT ENTRY POINT
1313 REM ------------------------------------------------------------------------
1310 REM HERE ANY TIME NEW QUADRANT ENTERED
1320 Z4=Q1
1330 Z5=Q2
1340 K3=0
1350 B3=0
1360 S3=0
1370 G5=0
1380 D4=.5*RND(1)
1390 IF Q1<1 THEN GOTO 1600
1400 IF Q1>8 THEN GOTO 1600
1410 Q2<1 THEN GOTO 1600
1420 Q2>8 THEN GOTO 1600
1430 GOSUB 9030
1440 PRINT
1450 IF T<>T0 THEN 1490
1460 PRINT"YOUR MISSION BEGINS WITH YOUR STARSHIP LOCATED"
1470 PRINT"IN THE GALACTIC QUADRANT, '";G2$;"'."
1480 GOTO 1500
1490 PRINT"NOW ENTERING ";G2$;" QUADRANT ..."
1500 PRINT
1510 X=GALAXY(Q1,Q2)*.01 REM Use GALAXY array name
1520 K3=INT(X)
1530 B3=INT((X-K3)*10)
1540 S3=GALAXY(Q1,Q2)-INT((GALAXY(Q1,Q2)*.1)*10)
1550 IF K3=0 THEN GOTO 1590
1560 PRINT "COMBAT AREA      CONDITION RED"
1570 IF S>200 THEN GOTO 1590
1580 PRINT "   SHIELDS DANGEROUSLY LOW"
1590 MAT K=ZER
1600 REM Loop from 1600-1620 seems redundant due to MAT K=ZER and R is not defined.
1610 REM R[I,J]=0
1620 REM NEXT I
1630 Q$=Z$
1640 R$=Z$
1650 S$=Z$[1,48]
1660 REM POSITION ENTERPRISE IN QUADRANT, THEN PLACE "K3" KLINGONS,
1670 REM "B3" STARBASES, & "S3" STARS ELSEWHERE.
1680 A$="<*>"
1690 Z1=S1
1700 Z2=S2
1710 GOSUB 8670
1720 FOR I=1 TO K3
1730   GOSUB 8590
1740   A$="+K+"
1750   Z1=R1
1760   Z2=R2
1770   GOSUB 8670
1780   K[I,1]=R1
1790   K[I,2]=R2
1800   K[I,3]=S9
1810 NEXT I
1820 FOR I=1 TO B3 REM Use B3 (Base Count) instead of S3 (Star Count)
1830   GOSUB 8590
1840   A$=">!<"
1850   Z1=R1
1860   B4=R1
1870   GOSUB 8670
1880   Z2=R2
1890   B5=R2
1900 NEXT I
1910 FOR I=1 TO S3
1920   GOSUB 8590
1930   A$=" * "
1940   Z1=R1
1950   Z2=R2
1960   GOSUB 8670
1970 NEXT I
1977 REM ------------------------------------------------------------------------
1978 REM                        MAIN GAME LOOP - SHORT RANGE SCAN
1979 REM ------------------------------------------------------------------------
1980 GOSUB 6430
1987 REM ------------------------------------------------------------------------
1988 REM                        MAIN GAME LOOP - COMMAND INPUT
1989 REM ------------------------------------------------------------------------
1990 IF S+E>10 THEN GOTO 2020
2000 IF E>10 THEN GOTO 2060
2010 IF DEVICE[7]=0 THEN GOTO 2060
2020 PRINT "** FATAL ERROR **   YOU'VE JUST STRANDED YOUR SHIP IN SPACE!!"
2030 PRINT "YOU HAVE INSUFFICIENT MANEUVERING ENERGY, AND SHIELD CONTROL,"
2040 PRINT "IS PRESENTLY INCAPABLE OF CROSS-CIRCUITING TO ENGINE ROOM!!"
2050 GOTO 6220
2060 PRINT "COMMAND"
2070 INPUT A$
2080 FOR I=1 TO 9
2090   IF A$[1,1]<>A1$[I,I] THEN GOTO 2160
2100   IF I<>2 THEN GOTO 2140
2110   IF LEN(A$)<2 THEN GOTO 2140
2120   IF A$[2,2]="R" THEN GOTO 2140
2130   I=6
2140   ON I THEN GOTO 2300,1980,4000,4260,4700,5530,5690,7290,6270 REM Added target 6270 for I=9 (XXX)
2150   IF A$="XXX" THEN GOTO 6270
2160 NEXT I
2170 PRINT "ENTER ONE OF THE FOLLOWING:"
2180 PRINT"  NAV  (TO SET COURSE)"
2190 PRINT"  SRS  (FOR SHORT RANGE SENSOR SCAN)"
2200 PRINT"  LRS  (FOR LONG RANGE SENSOR SCAN)"
2210 PRINT"  PHA  (TO FIRE PHASERS)"
2220 PRINT"  TOR  (TO FIRE PHOTON TORPEDOES)"
2230 PRINT"  SHE  (TO RAISE OR LOWER SHIELDS)"
2240 PRINT"  DAM  (FOR DAMAGE CONTROL REPORTS)"
2250 PRINT"  COM  (TO CALL ON LIBRARY-COMPUTER)"
2260 PRINT"  XXX  (TO RESIGN YOUR COMMAND)"
2270 PRINT
2280 GOTO 1990
2297 REM ------------------------------------------------------------------------
2298 REM                        NAV (TO SET COURSE)
2299 REM ------------------------------------------------------------------------
2290 REM COURSE CONTROL BEGINS HERE
2300 PRINT "COURSE (0-9)",
2310 INPUT C1
2320 IF C1>=1 THEN GOTO 2350
2330 PRINT"   LT. SULU REPORTS, 'INCORRECT COURSE DATA, SIR!'"
2340 GOTO 1990
2350 IF C1<9 THEN GOTO 2380
2360 IF C1>9 THEN GOTO 2330
2370 C1=1
2380 PRINT "WARP FACTOR (0-0)",
2390 INPUT W1
2400 IF W1>0 THEN GOTO 2420 REM Renumbered from 2340
2410 IF W1<=8 THEN GOTO 2450 REM Fixed THENGOTO
2420 PRINT "   CHIEF ENGINEER SCOTT REPORTS 'THE ENGINES WON'T"
2430 PRINT "          TAKE  WARP ";W1;"!'"
2440 GOTO 1990
2450 IF DEVICE[1]>=0 THEN GOTO 2490
2460 IF W1<=.2 THEN 2490
2470 PRINT "WARP ENGINES ARE DAMAGED.  MAXIUM SPEED = WARP 0.2"
2480 GOTO 2300
2490 N=INT(W1*8+.5)
2500 IF E-N>=0 THEN GOTO 2590
2510 PRINT"ENGINEERING REPORTS   'INSUFFICIENT ENERGY AVAILABLE"
2520 PRINT"                       FOR MANEUVERING AT WARP";W1;"!'"
2530 IF S<N-E THEN GOTO 1990
2540 IF DEVICE[7]<0 THEN GOTO 1990 REM Added IF
2550 PRINT "DEFLECTOR CONTROL ROOM ACKNOWLEDGES";S;"UNITS OF ENERGY"
2560 PRINT "                         PRESENTLY DEPLOYED TO SHIELDS."
2570 GOTO 5530
2580 REM KLINGONS MOVE/FIRE ON MOVING STARSHIP ...
2590 FOR I=1 TO K3
2600   IF K[I,3]=0 THEN GOTO 2700
2610   A$="   "
2620   Z1=K[I,1]
2630   Z2=K[I,2]
2640   GOSUB 8670
2650   GOSUB 8590
2660   K[I,1]=Z1
2670   K[I,2]=Z2
2680   A$="+K+"
2690   GOSUB 8670
2700 NEXT I
2710 GOSUB 6000
2720 D1=0
2730 D6=W1
2740 IF W1>=1 THEN GOTO 2770
2750 D6=1
2760 REM MAKE REPAIRS TO SHIP
2770 FOR I=1 TO 8
2780   IF DEVICE[I]>=0 THEN GOTO 2880
2790   DEVICE[I]=DEVICE[I]+D6
2800   IF DEVICE[I]<0 THEN GOTO 2880
2810   IF D1=1 THEN GOTO 2840
2820   D1=1
2830   PRINT"DAMAGE CONTROL REPORT:  "
2840   PRINT  TAB(8),
2850   R1=I
2860   GOSUB 8790
2870   PRINT " REPAIR COMPD."
2880 NEXT I
2890 REM DAMAGE/IMPROVEMENT DURING SOME YES
2900 IF RND(1)>.2 THEN GOTO 3070
2910 R1=INT(RND(1)*8+1) REM Corrected random number generation
2920 IF RND(1)>=.6 THEN GOTO 3000
2930 DEVICE[R1]=DEVICE[R1]-(RND(1)*5+1)
2940 PRINT
2950 PRINT "DAMAGE CONTROL REPORT:  ";
2960 GOSUB 8790
2970 PRINT " DAMAGED"
2980 PRINT
2990 GOTO 3070
3000 DEVICE[R1]=DEVICE[R1]+RND(1)*3+1
3010 PRINT
3020 PRINT "DAMAGE CONTROL REPORT:  ";
3030 GOSUB 8790
3040 PRINT " STATE OF REPAIR IMPROVED"
3050 PRINT
3060 REM BEGIN MOVING STARSHIP
3070 A$="   "
3080 Z1=INT(S1)
3090 Z2=INT(S2)
3100 GOSUB 8670
3110 X1=C[C1,1]+((C[C1+1,1]-C[C1,1])*(C1-INT(C1)))
3120 X=S1
3130 Y=S2
3140 X2=C[C1,2]+((C[C1+1,2]-C[C1,2])*(C1-INT(C1)))
3150 Q4=Q1
3160 Q5=Q2
3170 FOR I=1 TO N
3180   S1=S1+X1
3190   S2=S2+X2
3200   IF S1<1 THEN GOTO 3500
3210   IF S1>=9 THEN GOTO 3500
3220   IF S2<1 THEN GOTO 3500
3230   IF S2>=9 THEN GOTO 3500
3240   REM S8=(INT(S1)*24)+(INT(S2)*3)-26 REM Original index calculation - may need review
3241   S8=((INT(S1)-1)*24)+((INT(S2)-1)*3)+1 REM Index calculation based on sstr-comments-v1.bas (1-based)
3250   REM IF S8>2 THEN GOTO 3200 REM Original check - seems incorrect
3251   REM Check position based on Q$, R$, S$ string arrays - This logic is complex and differs significantly from sstr-comments-v1.bas MID$ approach.
3252   REM Assuming Q$, R$, S$ store rows 1-3, 4-6, 7-8 respectively. Needs verification.
3253   IF S8 > 72 THEN GOTO 3280 REM Check R$ or S$
3254   IF Q$[S8,S8+2]="   " THEN GOTO 3360 REM Check Q$ (Rows 1-3)
3255   GOTO 3320 REM Collision
3280   IF S8 > 144 THEN GOTO 3310 REM Check S$
3281   S0 = S8 - 72 REM Index for R$ (Rows 4-6)
3290   IF R$[S0,S0+2]="   " THEN GOTO 3360 REM Check R$
3300   GOTO 3320 REM Collision
3310   S0 = S8 - 144 REM Index for S$ (Rows 7-8)
3311   IF S$[S0,S0+2]="   " THEN GOTO 3360 REM Check S$
3312   GOTO 3320 REM Collision
3320   S1=S1-X1
3330   S2=S2-X2
3340   PRINT "WARP ENGINES SHUT DOWN AT SECTOR";S1;",";S2;"DUE TO BAD NAVIGATION"
3350   GOTO 3370
3360 NEXT I
3370 A$="<*>"
3380 Z1=INT(S1)
3390 Z2=INT(S2)
3400 GOSUB 8670
3410 GOSUB 3910
3420 T8=1
3430 IF W1>1 THEN GOTO 3450 
3440 T8=.1*INT(10*W1)
3450 T=T+T8
3460 IF T>T0+T9 THEN GOTO 6220
3470 REM SEE IF DOCKED, THEN GET COMMAND
3480 GOTO 1980
3490 REM EXCEEDED QUADRANT LIMITS
3500 X=(8*Q1)+X+(N*X1)
3510 Y=(8*Q2)+Y+(N*X2)
3520 Q1=INT(X/8)
3530 Q2=INT(Y/8)
3540 S1=INT(X-(Q1*8))
3550 S2=INT(Y-(Q2*8))
3560 IF S1<>0 THEN GOTO 3590
3570 Q1=Q1-1
3580 S1=8
3590 IF S2=0 THEN GOTO 3620
3600 Q2=Q2-1
3610 S2=8
3620 X5=0
3630 IF Q1<1 THEN GOTO 3670
3640 X5=1
3650 Q1=1
3660 S1=1
3670 IF Q1>8 THEN GOTO 3710
3680 X5=1
3690 Q1=8
3700 S1=8
3710 IF Q2<1 THEN GOTO 3750
3720 X5=1
3730 Q2=1
3740 S2=1
3750 IF Q2>8 THEN GOTO 3790
3760 X5=1
3770 Q2=8
3780 S2=8
3790 IF X5=0 THEN GOTO 3860
3800 PRINT "LT. UHURA REPORTS MESSAGE FROM STARFLEET COMMAND:"
3810 PRINT "  'PERMISSION TO ATTEMPT CROSSING OF GALACTIC PERIMETER"
3820 PRINT "  IS HEREBY *DENIED*.  SHUT DOWN YOUR ENGINES.'"
3830 PRINT "CHIEF ENGINEER SCOTT REPORTS  'WARP ENGINES SHUT DOWN"
3840 PRINT "  AT SECTOR ";S1;", ";S2;" OF QUADRANT ";Q1;",";Q2;".'"
3850 IF T>T0+T9 THEN GOTO 6220
3860 IF (8*Q1)+Q2=(8*Q4)+Q5 THEN GOTO 3370
3870 T=T+1
3880 GOSUB 3910
3890 GOTO 1320
3900 REM MANEUVER ENERGY S/R **
3910 E=E-N-10
3920 IF E>=0 THEN GOTO 1900
3930 PRINT "SHIELD CONTROL SUPPLIES ENERGY TO COMP THE MANEUVER."
3940 S=S+E REM Fixed assignment typo
3950 E=0
3960 If S>0 THEN GOTO 3980
3970 S=0
3980 RETURN
3997 REM ------------------------------------------------------------------------
3998 REM                        LRS  (FOR LONG RANGE SENSOR SCAN)
3999 REM ------------------------------------------------------------------------
3990 REM L. R. SENSOR SCAN CODE ***
4000 If DEVICE[3]>=0 THEN GOTO 4030
4010 PRINT "LONG RANGE SENSORS ARE INOPRABLE"
4020 GOTO 1990
4030 PRINT "LONG RANGE SENSOR SCAN FOR QUADRANT";Q1;", ";Q2
4040 O1$="-------------------" : REM Adjusted size
4050 PRINT O1$
4060 FOR I=Q1-1 TO Q1+1
4070    N[1]=-1 : N[2]=-1 : N[3]=-1 : REM Init row buffer with invalid value
4080    FOR J=Q2-1 TO Q2+1
4090      IF I<1 OR I>8 OR J<1 OR J>8 THEN GOTO 4150 : REM Check bounds
4100      N[J-(Q2-1)] = GALAXY[I,J] : REM Store GALAXY value in buffer N[1], N[2], or N[3]
4110      Z[I,J] = GALAXY[I,J] : REM Update cumulative record (Z array)
4150    NEXT J
4160    REM Print row buffer
4170    PRINT ":";
4180    FOR L=1 TO 3
4190      IF N[L] < 0 THEN PRINT " ***"; ELSE PRINT USING " ###";N[L];
4200    NEXT L
4210    PRINT " :"
4220    PRINT O1$
4230 NEXT I
4240 GOTO 1990
4257 REM ------------------------------------------------------------------------
4258 REM                        PHA  (TO FIRE PHASERS)
4259 REM ------------------------------------------------------------------------
4250 REM +++ PHASER CONTROL CODE BEGINS HERE
4260 IF K3>0 THEN GOTO 4300 REM Check K3 instead of undefined L3
4270 PRINT "SCIENCE OFFICER SPOCK REPORTS 'SENSORS SHOW"
4280 PRINT "   NO ENEMY SHIPS IN THIS QUADRANT.'"
4290 GOTO 1990
4300 IF DEVICE[4]>=0 THEN GOTO 4330
4310 PRINT "PHASERS INOPERATIVE"
4320 GOTO 1990
4330 IF DEVICE[8]>=0 THEN GOTO 4350 REM Fixed typo
4340 PRINT "COMPUTER FAILURE HAMPERS ACCURACY"
4350 PRINT "PHASERS LOCKER ON TARGET, "
4360 PRINT "ENERGY AVAILABLE = ";E
4370 PRINT "NUMBER OF UNITS TO FIRE:",
4380 INPUT X
4390 IF X<=0 THEN GOTO 1990
4400 IF E-X<0 THEN GOTO 4360
4410 E=E-X
4420 GOSUB 6000
4430 IF DEVICE[7]>=0 THEN GOTO 4450
4440 X=X+RND(1)
4450 H1=INT(X/K3)
4460 FOR I=1 TO 3
4470   IF K[I,3]<=0 THEN GOTO 4670
4480   H=INT((H1/FND(0))+(RND(1)+2))
4490   IF H>(0.15*K[I,3]) THEN GOTO 4530 REM Use K[I,3] and multiply, removed parens
4500   PRINT "SENSORS SHOW NO DAMAGE"
4510   PRINT "     TO ENEMY AT ";K[I,1];", ";K[I,2]
4520   GOTO 4670
4530   K[I,3]=K[I,3]-H
4540   PRINT H;" UNIT HIT ON KLINGON AT SECTOR ";K[I,1];", ";K[I,2]
4550   IF K[I,3]<=0 THEN GOTO 4580
4560   PRINT "     (SENSORS SHOW";K[I,3];" UNITS REMAINING) "
4570   GOTO 4670
4580   PRINT " +++ KLINGON DESTROYED +++"
4590   K3=K3-1
4600   K9=K9-1
4610   A$="   "
4620   Z1=K[I,1]
4630   Z2=K[I,2]
4640   GOSUB 8670
4650   GALAXY[Q1,Q2]=(K3*100)+(B3*10)+S3
4660   IF K9<=0 THEN GOTO 6370
4670 NEXT I
4680 GOTO 1990
4697 REM ------------------------------------------------------------------------
4698 REM                        TOR  (TO FIRE PHOTON TORPEDOES)
4699 REM ------------------------------------------------------------------------
4690 REM PHOTON TORPEDO CODE BEGINS +++
4700 IF DEVICE[5]>=0 THEN GOTO 4730
4710 PRINT "PHOTON TUBES ARE NOT OPERATIONAL "
4720 GOTO 1990
4730 IF P>0 THEN GOTO 4760
4740 PRINT "ALL PHOTON TORPEDOES EXPENDED"
4750 GOTO 1990
4760 PRINT "TORPEDO COURSE (1-9)",
4770 INPUT C1
4780 IF C1>=1 THEN GOTO 4810
4790 PRINT "ENSIGN CHEKOV REPORTS, 'INCORRECT COURSE DATA, SIR!'"
4800 GOTO 1990
4810 IF C1>9 THEN GOTO 4790
4820 IF C1<=9 THEN GOTO 4850
4830 IF C1>=9 THEN GOTO 4760
4840 C1=1
4850 X1=C[C1,1]+((C[C1+1,1]-C[C1,1])*(C1-INT(C1)))
4860 X2=C[C1,2]+((C[C1+1,2]-C[C1,2])*(C1-INT(C1))) REM Use Y components (index 2)
4870 E=E-2
4880 X=S1
4890 Y=S2
4900 P=P-1 REM Fixed assignment typo
4910 PRINT "TORPEDO TRACK:"
4920 X=X+X1
4930 Y=Y+X2
4940 X3=INT(X+.5)
4950 Y3=INT(Y+.5)
4960 IF X3<1 THEN GOTO 5490
4970 IF X3>=9 THEN GOTO 5490
4980 IF Y3<1 THEN GOTO 5490
4990 IF Y3>=9 THEN GOTO 5490
5000 PRINT "                ";X3;",";Y3
5010 A$="   "
5020 Z1=X
5030 Z2=Y
5040 GOSUB 8830 REM Changed target from 8030 to 8830
5050 IF Z3 = 0 THEN GOTO 4920 REM Check if empty (Z3=0), continue track
5060 A$="+K+" REM Check for Klingon
5070 Z1=X
5080 Z2=Y
5090 GOSUB 8830
5100 IF Z3=0 THEN GOTO 5210
5110 PRINT "+++ KLINGON DESTROYED +++"
5120 K3=K3-1
5130 K9=K9-1 REM Fixed assignment typo
5140 IF K9<=0 THEN GOTO 6370
5150 FOR I=1 TO 3
5160   IF X3<>K[I,1] THEN GOTO 5180 REM Use K instead of undefined L
5170   IF Y3=K[I,2] THEN GOTO 5190
5180 NEXT I
5190 K[I,3]=0
5200 GOTO 5430
5210 A$= " * " REM Check for Star
5220 Z1=X
5230 Z2 = Y
5240 GOSUB 8830
5250 IF Z3=0 THEN GOTO 5280 REM If not a star (Z3=0), check for base
5260 PRINT "STAR AT";X3;",";Y3;" ABSORBED TORPEDO ENERGY." REM Removed undefined V3
5270 GOTO 5500
5280 A$=">!<"
5290 Z1=X
5300 Z2=Y
5310 GOSUB 8830
5320 IF Z3=0 THEN GOTO 4760
5330 PRINT "+++ STARBASE DESTROYED +++"
5340 B3=B3-1
5350 B9=B9-1 REM Fixed assignment typo
5360 IF B9>0 THEN GOTO 5400
5370 PRINT "THAT DOES IT CAPTAIN!! YOU ARE HEREBY RELIEVE OF COMMAND"
5380 PRINT "   AND SENTENCED TO 99 STARDATES AT HARD LABOR ON CYGNUS 12!!"
5390 GOTO 6270
5400 PRINT "STARFLEET COMMAND REVIEWING YOUR RECORD TO CONSIDER"
5410 PRINT "   COURT MARTIAL!"
5420 D0=0
5430 A$="   "
5440 Z1=X
5450 Z2=Y 
5460 GOSUB 8670
5470 GALAXY[Q1,Q2]=(K3*100)+(B3*10)+S3
5480 GOTO 5500
5490 PRINT "TORPEDO MISSED"
5500 GOSUB 6000
5510 GOTO 1990
5527 REM ------------------------------------------------------------------------
5528 REM                        SHE  (TO RAISE OR LOWER SHIELDS)
5529 REM ------------------------------------------------------------------------
5520 REM +++ SHIELD CONTROL STARTS HERE
5530 IF DEVICE[7]>=0 THEN GOTO 5560
5540 PRINT "SHIELD CONTROL INOPERABLE"
5550 GOTO 1990
5560 PRINT "ENERGY AVAILABLE = ";E+S;". NUMBER OF UNITS TO SHIELDS:",
5570 INPUT X
5580 IF X>0 THEN GOTO 5620
5590 IF S<>X THEN GOTO 5620
5600 PRINT "(SHIELDS UNCHANGED)"
5610 GOTO 1990
5620 IF E+S-X<0 THEN GOTO 5560
5630 E=E+S-X
5640 S=X
5650 PRINT "DEFLECTOR CONTROL ROOM REPORT:"
5660 PRINT "   'SHIELDS NOW AT ";S;" PER YOUR COMMAND'"
5670 GOTO 1990
5687 REM ------------------------------------------------------------------------
5688 REM                        DAM  (FOR DAMAGE CONTROL REPORTS)
5689 REM ------------------------------------------------------------------------
5680 REM +++ DAMAGE CONTROL STARTS HERE
5690 IF DEVICE[6]>=0 THEN GOTO 5910
5700 PRINT "DAMAGE CONTROL REPORT NOT AVAILABLE"
5710 IF D0=0 THEN GOTO 1990
5720 D3=0
5730 FOR I=1 TO 8 REM Loop bounds 1 to 8 for DEVICE array
5740  IF DEVICE[I]>=0 THEN GOTO 5760
5750  D3=D3+.1
5760 NEXT I
5770 IF D3=0 THEN GOTO 1990
5780 D3=D3+D4
5790 IF D3<1 THEN GOTO 5810
5800 D3=.9
5810 PRINT "TECHNICIANS STANDING BY TO EFFECT REPAIRS TO YOUR SHIP,"
5820 PRINT "ESTIMATED TIME TO REPAIR: ",
5830 PRINT USING ".# STARDATES",D3
5840 PRINT "WILL YOU AUTHORIZE THE REPAIR ORDER (YES/NO)",
5850 INPUT A$
5860 IF A$<>"YES" THEN GOTO 1990
5870 FOR I=1 TO 8
5880   DEVICE[I]=0
5890 NEXT I
5900 T=T+D3+.1
5910 PRINT
5920 PRINT "DEVICE         STATE OF REPAIR"
5930 FOR R1=1 TO 8
5940    GOSUB 8790
5950    PRINT USING "   =##.##",DEVICE[R1]
5960 NEXT R1
5970 PRINT
5980 GOTO 5710
5997 REM ------------------------------------------------------------------------
5998 REM                        KLINGONS SHOOTING
5999 REM ------------------------------------------------------------------------
5990 REM "KLINGONS SHOOTING" CODE BEGINS +++
6000 IF K3<=0 THEN GOTO 6210
6010 IF D0=0 THEN GOTO 6040
6020 PRINT "STAR BASE SHIELDS PROTECT THE ENTERPRISE"
6030 GOTO 6210
6040 FOR I=1 TO 3
6050    IF K[I,3]<=0 THEN GOTO 6200 REM Fixed condition
6060    H=INT((K[I,3]/FND(0))+(2+RND(1))) REM Use K[I,3]
6070    S=S-H
6080    PRINT H;" UNIT HIT ON ENTERPRISE FROM SECTOR";K[I,1];", ";K[I,2] REM Use K[I,1] and K[I,2]
6090    IF S<0 THEN GOTO 6240
6100    PRINT "    (SHIELDS DOWN TO ";S;" UNITS.)"
6110    IF H<20 THEN GOTO 6200
6120    IF RND(1)>.6 THEN GOTO 6200
6130    IF H/S<=.02 THEN GOTO 6200
6140    D2=(H/S)+.5+RND(1)
6150    R1=INT(RND(1)*8+1) REM Corrected random number generation
6160    DEVICE[R1]=DEVICE[R1]-D2
6170    PRINT "DAMAGE CONTROL REPORTS '",
6180    GOSUB 8790
6190    PRINT "DAMAGED BY THE HIT!'"
6200 NEXT I
6210 RETURN
6217 REM ------------------------------------------------------------------------
6218 REM                        END OF GAME
6219 REM ------------------------------------------------------------------------
6220 PRINT "IT IS STARDATE ";T
6230 GOTO 6270
6240 PRINT
6250 PRINT "THE ENTERPRISE HAS BEEN DESTROYED. THE FEDERATION WILL BE CONQUERED."
6260 PRINT "IT IS STARDATE ";T;"."
6270 PRINT "THERE WERE ";K9;" KLINGON BATTLE CRUISERS LEFT AT"
6280 PRINT "THE END OF YOUR MISSION."
6290 PRINT
6300 PRINT
6310 PRINT "THE FEDERATION IS IN NEED OF A NEW STARSHIP COMMANDER"
6320 PRINT "FOR A SIMILAR MISSION -- IF THERE IS A VOLUNTEER,"
6330 PRINT "HIM STEP FORWARD AND ENTER 'AYE'."
6340 INPUT A$
6350 IF A$="AYE" THEN GOTO 0240
6360 GOTO 9250
6370 PRINT "CONGRATULATIONS, CAPTAIN! THE LAST KLINGON BATTLE CRUISER"
6380 PRINT "   MENACING THE FEDERATION HAS BEEN DESTROYED."
6390 PRINT
6400 PRINT "YOUR EFFICIENCY RATING IS ";(((K7/(T-T0))+1000));"."
6410 GOTO 6290
6427 REM ------------------------------------------------------------------------
6428 REM                        SRS  (FOR SHORT RANGE SENSOR SCAN)
6429 REM ------------------------------------------------------------------------
6420 REM S.R. SENSOR SCAN & STARTUP SUBR. ***
6430 FOR I=S1-1 TO S1+1
6440  FOR J=S2-1 TO S2+1
6450    IF INT(I+.5)<1 THEN GOTO 6540
6460    IF INT(I+.5)>8 THEN GOTO 6540
6470    IF INT(J+.5)<1 THEN GOTO 6540
6480    IF INT(J+.5)>8 THEN GOTO 6540
6490    A$=">!<"
6500    Z1=I
6510    Z2=J
6520    GOSUB 8830
6530    IF Z3=1 THEN GOTO 6580
6540   NEXT J
6550 NEXT I
6560 D0=0
6570 GOTO 6650
6580 D0=1
6590 C$="DOCKED"
6600 E=3000
6610 P=10
6620 PRINT "SHIELDS DROPPED FOR DOCKING PURPOSES"
6630 S=0
6640 GOTO 6720
6650 IF K3>0 THEN GOTO 6690
6660 IF E<E0+.1 THEN GOTO 6710
6670 C$=" GREEN"
6680 GOTO 6720 
6690 C$=" <7>*RED*<7>"
6700 GOTO 6720
6710 C$="YELLOW"
6720 IF DEVICE[2]>=0 THEN GOTO 6770
6730 PRINT 
6740 PRINT "*** SHORT RANGE SENSORS ARE OUT ***"
6750 PRINT 
6760 GOTO 7270
6770 O1$="----------------------------------------"
6780 PRINT O1$
6790 REM
6800 REM
6810 PRINT " ";
6820 FOR I=1 TO 22 STEP 3
6830   PRINT Q$[I,I+2];" ";
6840 NEXT I
6850 PRINT 
6860 PRINT " ";
6870 FOR I=25 TO 46 STEP 3
6880   PRINT Q$[I,I+2];" ";
6890 NEXT I
6900 PRINT " STARDATE ";
6910 PRINT USING "****.*",T
6920 PRINT " ";
6930 FOR I=49 TO 70 STEP 3
6940   PRINT Q$[I,I+2];" ";
6950 NEXT I
6960 PRINT " CONDITION";
6970 PRINT C$
6980 PRINT " ";
6990 FOR I=1 TO 22 STEP 3
7000   PRINT R$[I,I+2];" ";
7010 NEXT I
7020 PRINT " QUADRANT ";Q1;",";Q2
7030 PRINT " ";
7040 FOR I=25 TO 46 STEP 3
7050   PRINT R$[I,I+2];" ";
7060 NEXT I
7070 PRINT " SECTOR ";S1;",";S2
7080 PRINT "  ";
7090 FOR I=49 TO 70 STEP 3
7100   PRINT R$[I,I+2];" ";
7110 NEXT I
7120 PRINT " TOTAL ENERGY ";
7130 PRINT USING "****",E+S
7140 PRINT " ";
7150 FOR I=1 TO 22 STEP 3
7160   PRINT S$[I,I+2];" ";
7170 NEXT I
7180 PRINT " PHOTON TORPEDOES";
7190 PRINT USING "****",P
7200 PRINT " ";
7210 FOR I=25 TO 46 STEP 3
7220   PRINT S$[I,I+2];" ";
7230 NEXT I
7240 PRINT " SHIELDS ";
7250 PRINT USING "****",S
7260 PRINT O1$
7270 RETURN
7287 REM ------------------------------------------------------------------------
7288 REM                        COM  (TO CALL ON LIBRARY-COMPUTER)
7289 REM ------------------------------------------------------------------------
7280 REM *** LIBRARY COMPUTER CODE BEGINS HERE
7290 IF DEVICE[8]>=0 THEN GOTO 7320 REM Fixed typo
7300 PRINT "COMPUTER DISABLED"
7310 GOTO 1990
7320 PRINT "COMPUTER ACTIVE AND AWAITING COMMAND:";
7330 INPUT A
7340 IF A<0 THEN GOTO 1990
7350 PRINT
7360 H8=1
7370 IF A=0 THEN GOTO 7540
7380 ON A THEN GOTO 7900,8070,8500,8150,7400
7390 GOTO 7450
7397 REM ------------------------------------------------------------------------
7398 REM                        5 = GALAXY 'REGION NAME' MAP
7399 REM ------------------------------------------------------------------------
7400 REM *** SETUP TO CHANGE C.G. RECORD TO GALAXY MAP
7410 H8=0
7420 G5=1
7430 PRINT " THE GALAXY"
7440 GOTO 7550
7450 PRINT "FUNCTIONS AVAILABLE FROM LIBRARY-COMPUTER:"
7460 PRINT " 0 = CUMULATIVE GALACTIC RECORD"
7470 PRINT " 1 = STATUS REPORT"
7480 PRINT " 2 = PHOTON TORPEDO DATA"
7490 PRINT " 3 = STARBASE NAV DATA"
7500 PRINT " 4 = DIRECTION/DISTANCE CALCULATOR"
7510 PRINT " 5 = GALAXY 'REGION NAME' MAP"
7520 GOTO 7320
7537 REM ------------------------------------------------------------------------
7538 REM                        0 = CUMULATIVE GALACTIC RECORD
7539 REM ------------------------------------------------------------------------
7530 REM *** CUM GALACTIC RECORD CODE BEGINS ***
7540 PRINT "COMPUTER RECORD OF GALAXY FOR QUADRANT ";Q1;", ";Q2;":"
7550 PRINT "     1     2     3     4     5     6     7     8"
7560 O3$="   ----- ----- ----- ----- ----- ----- ----- -----"
7570 PRINT O3$
7580 DIM N$[5]
7590 FOR I=1 TO 8
7600 REM
7610   PRINT USING "#",I;
7620   IF H8=0 THEN GOTO 7740
7630   FOR J=1 TO 8
7640 REM
7650     N$=""
7660     IF I<>Q1 THEN GOTO 7700
7670     IF J<>Q2 THEN GOTO 7700
7680     N$="<7>"
7690     PRINT N$;
7700     PRINT USING " ###",Z[I,J];
7710     PRINT N$;
7720   NEXT J
7730   GOTO 7850
7740   Z4=I
7750   Z5=1
7760   GOSUB 9030
7770   J0=INT(15-(.5*LEN(G2$)))
7780   PRINT TAB(J0);
7790   PRINT G2$
7800   Z5=5
7810   GOSUB 9030
7820   J0=INT(39-(.5*LEN(G2$)))
7830   PRINT TAB(J0);
7840   PRINT G2$;
7850   PRINT
7860   PRINT O3$
7870 NEXT I
7880 GOTO 1990
7897 REM ------------------------------------------------------------------------
7898 REM                        1 = STATUS REPORT
7899 REM ------------------------------------------------------------------------
7890 REM *** STATUS REPORT CODE BEGINS HERE ***
7900 PRINT " STATUS REPORT:"
7910 X$=""
7920 IF K9=1 THEN GOTO 7940
7930 X$="S"
7940 PRINT K9;" KLINGON";X$;" LEFT"
7950 V5=(T0+T9)-T
7960 PRINT USING "MISSION MUST BE COMPD IN **.* STARDATES",V5
7970 X$=""
7980 IF B9=1 THEN GOTO 8040
7990 X$="S"
8000 IF B9<>0 THEN GOTO 8040
8010 PRINT "YOUR STUPIDITY HAS LEFT YOU ON YOUR OWN IN"
8020 PRINT " THE GALAXY -- YOU HAVE NO STARBASES LEFT!"
8030 GOTO 5690
8040 PRINT " THE FEDERATION IS MAINTAINING";B9;" STARBASES";X$;" IN THE GALAXY"
8050 GOTO 5690
8067 REM ------------------------------------------------------------------------
8068 REM                        2 = PHOTON TORPEDO DATA
8069 REM ------------------------------------------------------------------------
8060 REM CODE FOR TORPEDO DATA, BASE NAV, D/D CALCULATOR ***
8070 H8=0
8080 FOR I=1 TO 3
8090   IF K[I,3]<=0 THEN GOTO 8480
8100   W1=K[I,1]
8110   X=K[I,2]
8120   C1=S1
8130   A=S2
8140   GOTO 8220
8147 REM ------------------------------------------------------------------------
8148 REM                        4 = DIRECTION/DISTANCE CALCULATOR
8149 REM ------------------------------------------------------------------------
8150   PRINT " DIRECTION/DISTANCE CALCULATOR:"
8160   PRINT "YOU ARE AT QUADRANT (";Q1;",";Q2;") SECTOR (";S1;",";S2;")"
8170   PRINT " PLEASE ENTER --"
8180   PRINT " INITIAL COORDINATES (X,Y)";
8190   INPUT C1,A 
8200   PRINT " FINAL COORDINATES (X,Y)";
8210   INPUT W1,X
8220   X=X-A
8230   A=C1-W1
8240   IF X<0 THEN GOTO 8350
8250   IF A<0 THEN GOTO 8410
8260   IF X>0 THEN GOTO 8280
8270   IF A=0 THEN GOTO 8370
8280   C1=1
8290   IF ABS(A)<=ABS(X) THEN GOTO 8330
8300   V5=C1+(((ABS(A)-ABS(X))+ABS(A))/ABS(A))
8310   PRINT " DIRECTION =";V5
8320   GOTO 8460
8330   PRINT " DIRECTION =";(C1+(ABS(A)/ABS(X)))
8340   GOTO 8460
8350   IF A>0 THEN GOTO 8390
8360   IF X=0 THEN GOTO 8410 REM Check if X is zero
8370   C1=5
8380   GOTO 8290
8390   C1=3
8400   GOTO 8420
8410   C1=7
8420   IF ABS(A)>=ABS(X) THEN GOTO 8450 REM Fixed typo
8430   PRINT " DIRECTION =";(C1+(((ABS(X)-ABS(A))+ABS(X))/ABS(X))) REM Formula based on sstr-comments-v1.bas
8440   GOTO 8460
8450   PRINT "DIRECTION =";(C1+(ABS(X)/ABS(A)))
8460   PRINT "DISTANCE =";SQR((X^2)+(A^2))
8470   IF H8=1 THEN GOTO 1990
8480 NEXT I
8490 GOTO 1990
8497 REM ------------------------------------------------------------------------
8498 REM                        3 = STARBASE NAV DATA
8499 REM ------------------------------------------------------------------------
8500 IF B3<>0 THEN GOTO 8530
8510 PRINT "MR. SPOCK REPORTS, 'SENSORS SHOW NO STARBASES IN THIS QUADRANT.'"
8520 GOTO 1990
8530 PRINT "FROM ENTERPRISE TO STARBASE:"
8540 W1=B4
8550 X=B5
8560 GOTO 8120
8570 REM *** END OF LIBRARY-COMPUTER CODE
8580 REM S/R FINDS RANDOM HOLE IN QUADRANT
8590 R1=INT(RND(1)*8+1)
8600 R2=INT(RND(1)*8+1)
8610 A$="   "
8620 Z1=R1
8630 Z2=R2
8640 GOSUB 8830
8650 IF Z3=0 THEN GOTO 8590
8660 RETURN
8670 REM *** INSERTION IN STRING ARRAY FOR QUADRANT ***
8671 REM This subroutine's logic for mapping Z1,Z2 to Q$,R$,S$ indices is complex and potentially flawed.
8672 REM sstr-comments-v1.bas uses a single string Q$ and MID$ for simpler display mapping.
8673 REM Using the sstr-comments-v1.bas index calculation for now.
8680 S8=((INT(Z2+.5)-1)*3)+((INT(Z1+.5)-1)*24)+1 REM Index based on sstr-comments-v1.bas (1-based)
8690 IF S8 > 72 THEN GOTO 8720
8700 Q$[S8,S8+2]=A$
8710 GOTO 8780
8720 IF S8 > 144 THEN GOTO 8760
8730 S0=S8-72 REM Adjusted index for R$
8740 R$[S0,S0+2]=A$
8750 GOTO 8780
8760 S0=S8-144 REM Adjusted index for S$
8770 S$[S0,S0+2]=A$
8780 RETURN
8790 REM *** PRINTS DEVICE NAME FROM ARRAY ***
8800 S8=R1*12-11
8810 PRINT D$[S8,S8+11],
8820 RETURN
8830 REM *** STRING COMPARISON IN QUADRANT ARRAY ***
8840 Z1=INT(Z1+.5)
8850 Z2=INT(Z2+.5)
8860 S8=((Z2-1)*3)+((Z1-1)*24)+1 REM Index based on sstr-comments-v1.bas (1-based)
8870 Z3=0
8880 IF S8 > 72 THEN GOTO 8920
8890 IF Q$[S8,S8+2]<>A$ THEN GOTO 9000
8900 Z3=1
8910 GOTO 9000
8920 IF S8 > 144 THEN GOTO 8970
8930 S0=S8-72 REM Adjusted index for R$
8940 IF R$[S0,S0+2]<>A$ THEN GOTO 9000
8950 Z3=1
8960 GOTO 9000
8970 S0=S8-144 REM Adjusted index for S$
8980 IF S$[S0,S0+2]<>A$ THEN GOTO 9000
8990 Z3=1
9000 RETURN
9010 REM ** S/R PRODUCES QUADRANT NAME IN G2$ FROM Z4,Z5(=Q1,Q2)
9020 REM ** (CALL WITH G5=1 TO GET REGION NAME ONLY)
9030 L2=2
9040 Z5>=5 THEN GOTO 9060
9050 L2=1
9060 L3=(2*(Z4-1))+L2
9070 I3=1 
9080 I0=1
9090 FOR L=1 TO LEN(G1$)
9100   IF G1$[L,L]<>"." THEN GOTO 9140
9110   IF I3=L3 THEN GOTO 9150
9120   I0=L+1
9130   I3=I3+1
9140 NEXT L
9150 G2$=G1$[I0,L-1]
9160 IF G5=1 THEN GOTO 9240
9170 L3=Z5
9180 IF Z5<=4 THEN GOTO 9200 
9190 L3=Z5-4
9200 G3$="IV"
9210 IF L3=4 THEN GOTO 9230
9220 G3$=G4$[1,L3]
9230 G2$=G2$," ",G3$
9240 RETURN
9250 STOP
9260 END

