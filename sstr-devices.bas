10 REM SUPER STARTREK - MAY 16,1978 - REQUIRES 24K MEMORY
30 REM 
40 REM ****        **** STAR TREK ****        ****
50 REM **** SIMULATION OF A MISSION OF THE STARSHIP ENTERPRISE,
60 REM **** AS SEEN ON THE STAR TREK TV SHOW.
70 REM **** ORIGIONAL PROGRAM BY MIKE MAYFIELD, MODIFIED VERSION
80 REM **** PUBLISHED IN DEC'S "101 BASIC GAMES", BY DAVE AHL.
90 REM **** MODIFICATIONS TO THE LATTER (PLUS DEBUGGING) BY BOB
100 REM *** LEEDOM - APRIL & DECEMBER 1974,
110 REM *** WITH A LITTLE HELP FROM HIS FRIENDS . . .
120 REM *** COMMENTS, EPITHETS, AND SUGGESTIONS SOLICITED --
130 REM *** SEND TO:  R. C. LEEDOM
140 REM ***           WESTINGHOUSE DEFENSE & ELECTRONICS SYSTEMS CNTR.
150 REM ***           BOX 746, M.S. 338
160 REM ***           BALTIMORE, MD  21203
170 REM ***
180 REM *** CONVERTED TO MICROSOFT 8 K BASIC 3/16/78 BY JOHN GORDERS
190 REM *** LINE NUMBERS FROM VERSION STREK7 OF 1/12/75 PRESERVED AS
200 REM *** MUCH AS POSSIBLE WHILE USING MULTIPLE STATEMENTS PER LINE
205 REM *** SOME LINES ARE LONGER THAN 72 CHARACTERS; THIS WAS DONE
210 REM *** BY USING "?" INSTEAD OF "PRINT " WHEN ENTERING LINES
215 REM ***
220 PRINT : PRINT : PRINT : PRINT : PRINT : PRINT : PRINT : PRINT : PRINT : PRINT : PRINT
221 PRINT "                                    ,------*------,"
222 PRINT "                    ,-------------   '---  ------'"
223 PRINT "                     '-------- --'      / /"
224 PRINT "                         ,---' '-------/ /--,"
225 PRINT "                          '----------------'":PRINT
226 PRINT "                    THE USS ENTERPRISE --- NCC-1701"
227 PRINT : PRINT : PRINT : PRINT : PRINT
260 REM CLEAR 600


270 Z$="                         "
330 DIM GALAXY(8,8)
331 DIM DIRECTIONVECTOR(9,2)
332 DIM KLINGONSTATUS(3,3)
333 DIM LRSBUFFER(3)
334 DIM VISITEDQUADRANTS(8,8)

' Device status variables (replacing DEVICESTATUS array)
335 WARP_ENGINES = 0        ' Device 1
336 SHORT_RANGE_SENSORS = 0 ' Device 2
337 LONG_RANGE_SENSORS = 0  ' Device 3
338 PHASER_CONTROL = 0      ' Device 4
339 PHOTON_TUBES = 0        ' Device 5
340 DAMAGE_CONTROL = 0      ' Device 6
341 SHIELD_CONTROL = 0      ' Device 7
342 LIBRARY_COMPUTER = 0    ' Device 8

370 STARDATE=INT(RND(1)*20+20)*100
371 STARDATESTART=STARDATE
372 MISSIONLENGTH=25+INT(RND(1)*10)
373 ISDOCKED=0
374 ENERGY=3000
375 INITIALENERGY=ENERGY
440 TORPEDOCNT=10
441 INITIALTORPEDOES=TORPEDOCNT
442 KLINGONMAXSHIELDS=200
443 SHIELD=0
444 TOTALBASECNT=2
445 TOTALKLINGONCNT=0
446 X$=""
447 X0$=" IS "

480 REM INITIALIZE ENTERPRIZE'S POSITION
490 ENTERPRISEQUADRANTX=INT(RND(1)*7.98+1.01)
491 ENTERPRISEQUADRANTY=INT(RND(1)*7.98+1.01)
492 ENTERPRISESECTORX=INT(RND(1)*7.98+1.01)
493 ENTERPRISESECTORY=INT(RND(1)*7.98+1.01)

530 FOR I = 1 TO 9
531   DIRECTIONVECTOR(I,1) = 0
532   DIRECTIONVECTOR(I,2) = 0
533 NEXT I
540 DIRECTIONVECTOR(3,1)=-1
541 DIRECTIONVECTOR(2,1)=-1
542 DIRECTIONVECTOR(4,1)=-1
543 DIRECTIONVECTOR(4,2)=-1
544 DIRECTIONVECTOR(5,2)=-1
545 DIRECTIONVECTOR(6,2)=-1
600 DIRECTIONVECTOR(1,2)=1
601 DIRECTIONVECTOR(2,2)=1
602 DIRECTIONVECTOR(6,1)=1
603 DIRECTIONVECTOR(7,1)=1
604 DIRECTIONVECTOR(8,1)=1
605 DIRECTIONVECTOR(8,2)=1
606 DIRECTIONVECTOR(9,2)=1

710 A1$="NAVSRSLRSPHATORSHEDAMCOMXXX"

810 REM SETUP WHAT EXHISTS IN GALAXY . . .
820 FOR I = 1 TO 8 
821   FOR J = 1 TO 8
822      KLINGONCNT = 0
823      VISITEDQUADRANTS(I,J) = 0
840      R1 = RND(1)
850      IF R1>.98 THEN KLINGONCNT=3 : TOTALKLINGONCNT=TOTALKLINGONCNT+3 : GOTO 980
860      IF R1>.95 THEN KLINGONCNT=2 : TOTALKLINGONCNT=TOTALKLINGONCNT+2 : GOTO 980
870      IF R1>.80 THEN KLINGONCNT=1 : TOTALKLINGONCNT=TOTALKLINGONCNT+1
980      BASECNT=0
981      IF RND(1)>.96 THEN BASECNT=1 : TOTALBASECNT=TOTALBASECNT+1
1040     GALAXY(I,J)=KLINGONCNT*100+BASECNT*10+INT(RND(1)*7.98+1.01) 
1050   NEXT J
1051 NEXT I 

1060 IF TOTALKLINGONCNT>MISSIONLENGTH THEN MISSIONLENGTH=TOTALKLINGONCNT+1

1100 IF TOTALBASECNT<>0 THEN GOTO 1200
1150 IF GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)<200 THEN GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)=GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)+120 : TOTALKLINGONCNT=TOTALKLINGONCNT+1
1160 TOTALBASECNT=1
1161 GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)=GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)+10
1162 ENTERPRISEQUADRANTX=INT(RND(1)*7.98+1.01)
1163 ENTERPRISEQUADRANTY=INT(RND(1)*7.98+1.01)

1200 INITIALKLINGONCNT=TOTALKLINGONCNT
1201 IF TOTALBASECNT<>1 THEN X$="S" : X0$=" ARE "

1230 PRINT "YOUR ORDERS ARE AS FOLLOWS:"
1240 PRINT "     DESTROY THE";TOTALKLINGONCNT;"KLINGON WARSHIPS WHICH HAVE INVADED"
1252 PRINT "   THE GALAXY BEFORE THEY CAN ATTACK FEDERATION HEADQUARTERS"
1260 PRINT "   ON STARDATE";STARDATESTART+MISSIONLENGTH;"  THIS GIVES YOU";MISSIONLENGTH;"DAYS.  THERE";X0$
1272 PRINT "  ";TOTALBASECNT;"STARBASE";X$;" IN THE GALAXY FOR RESUPPLYING YOUR SHIP"
1280 PRINT : REM PRINT "HIT ANY KEY EXCEPT RETURN WHEN READY TO ACCEPT COMMAND"
1300 I=RND(1):REM IF INP(1)=13 THEN GOTO 1300


1310 REM ------------------------------------------------------------------------
1311 REM                        NEW QUADRANT ENTRY POINT
1312 REM ------------------------------------------------------------------------
1320 Z4=ENTERPRISEQUADRANTX
1321 Z5=ENTERPRISEQUADRANTY
1322 KLINGONCNT=0
1323 BASECNT=0
1324 STARCNT=0
1325 G5=0
1326 D4=.5*RND(1)
1327 VISITEDQUADRANTS(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)=GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)
1390 IF ENTERPRISEQUADRANTX<1 OR ENTERPRISEQUADRANTX>8 OR ENTERPRISEQUADRANTY<1 OR ENTERPRISEQUADRANTY>8 THEN GOTO 1600
1430 GOSUB 9030 
1431 PRINT
1432 IF STARDATESTART <> STARDATE THEN GOTO 1490
1460 PRINT "YOUR MISSION BEGINS WITH YOUR STARSHIP LOCATED"
1470 PRINT "IN THE GALACTIC QUADRANT, '";G2$;"'."
1471 GOTO 1500
1490 PRINT "NOW ENTERING ";G2$;" QUADRANT . . ."
1500 PRINT
1501 KLINGONCNT=INT(GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)*.01)
1502 BASECNT=INT(GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)*.1)-10*KLINGONCNT
1540 STARCNT=GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)-100*KLINGONCNT-10*BASECNT
1541 IF KLINGONCNT=0 THEN GOTO 1590
1560 PRINT "COMBAT AREA      CONDITION RED"
1561 IF SHIELD>200 THEN GOTO 1590
1580 PRINT "   SHIELDS DANGEROUSLY LOW"

1590 FOR I = 1 TO 3 
1591   KLINGONSTATUS(I,1) = 0 
1592   KLINGONSTATUS(I,2) = 0 
1593 NEXT I
1600 FOR I = 1 TO 3 
1601   KLINGONSTATUS(I,3) = 0 
1602 NEXT I

1603 Q$ = Z$ + Z$ + Z$ + Z$ + Z$ + Z$ + Z$ + LEFT$(Z$,17)
1660 REM POSITION ENTERPRISE IN QUADRANT, THEN PLACE "KLINGONCNT" KLINGONS, &
1670 REM "BASECNT" STARBASES, & "STARCNT" STARS ELSEWHERE.
1680 A$="<*>"
1681 Z1=ENTERPRISESECTORX
1682 Z2=ENTERPRISESECTORY
1683 GOSUB 8670 : REM Place symbol in quadrant display
1684 IF KLINGONCNT<1 THEN GOTO 1820

1720 FOR I=1 TO KLINGONCNT
1721   GOSUB 8590 : REM Find empty location in quadrant
1722   A$="+K+"
1723   Z1=R1
1724   Z2=R2
1780   GOSUB 8670 : REM Place symbol in quadrant display
1781   KLINGONSTATUS(I,1)=R1
1782   KLINGONSTATUS(I,2)=R2
1783   KLINGONSTATUS(I,3)=KLINGONMAXSHIELDS*(0.5+RND(1))
1790  NEXT I

1820 IF BASECNT<1 THEN GOTO 1910
1880 GOSUB 8590 : REM Find empty location in quadrant
1881 A$=">!<"
1882 Z1=R1
1883 B4=R1
1884 Z2=R2
1885 B5=R2
1886 GOSUB 8670 : REM Place symbol in quadrant display

1910 FOR I=1 TO STARCNT
1911   GOSUB 8590 : REM Find empty location in quadrant
1912   A$=" * ":Z1=R1
1913   Z2=R2
1914   GOSUB 8670 : REM Place symbol in quadrant display
1915 NEXT I

1980 REM ------------------------------------------------------------------------
1981 REM                        MAIN GAME LOOP - SHORT RANGE SCAN
1982 REM ------------------------------------------------------------------------
1983 GOSUB 6430 : REM Display short range scan

1990 REM ------------------------------------------------------------------------
1991 REM                        MAIN GAME LOOP - COMMAND INPUT
1992 REM ------------------------------------------------------------------------
1993 IF SHIELD+ENERGY>10 THEN IF ENERGY>10 OR SHIELD_CONTROL=0 THEN GOTO 2060
2020 PRINT
2021 PRINT "** FATAL ERROR **   YOU'VE JUST STRANDED YOUR SHIP IN "
2030 PRINT "SPACE"
2031 PRINT "YOU HAVE INSUFFICIENT MANEUVERING ENERGY,";
2040 PRINT " AND SHIELD CONTROL"
2041 PRINT "IS PRESENTLY INCAPABLE OF CROSS";
2050 "-CIRCUITING TO ENGINE ROOM!!"
2051 GOTO 6220

2060 INPUT "COMMAND";A$
2080 FOR I=1 TO 9
2081   IF LEFT$(A$,3)<>MID$(A1$,3*I-2,3) THEN GOTO 2160
2140   ON I GOTO 2300,1980,4000,4260,4700,5530,5690,7290,6270
2160 NEXT I
2161 PRINT "ENTER ONE OF THE FOLLOWING:"
2180 PRINT "  NAV  (TO SET COURSE)"
2190 PRINT "  SRS  (FOR SHORT RANGE SENSOR SCAN)"
2200 PRINT "  LRS  (FOR LONG RANGE SENSOR SCAN)"
2210 PRINT "  PHA  (TO FIRE PHASERS)"
2220 PRINT "  TOR  (TO FIRE PHOTON TORPEDOES)"
2230 PRINT "  SHE  (TO RAISE OR LOWER SHIELDS)"
2240 PRINT "  DAM  (FOR DAMAGE CONTROL REPORTS)"
2250 PRINT "  COM  (TO CALL ON LIBRARY-COMPUTER)"
2260 PRINT "  XXX  (TO RESIGN YOUR COMMAND)"
2261 PRINT
2262 GOTO 1990 : REM Main game loop

2290 REM ------------------------------------------------------------------------
2290 REM                        NAV (TO SET COURSE)
2291 REM ------------------------------------------------------------------------
2300 INPUT"COURSE (0-9)";C1
2301 IF C1=9 THEN C1=1
2310 IF C1>=1 AND C1<9 THEN GOTO 2350
2330 PRINT "   LT. SULU REPORTS, 'INCORRECT COURSE DATA, SIR!'"
2331 GOTO 1990 : REM Main game loop

2350 X$="8"
2351 IF WARP_ENGINES<0 THEN X$="0.2"
2360 PRINT "WARP FACTOR (0-";X$;")";
2361 INPUT W1
2362 IF WARP_ENGINES<0 AND W1>.2 THEN GOTO 2470
2380 IF W1>0 AND W1<=8 THEN GOTO 2490
2390 IF W1=0 THEN GOTO 1990 : REM Main game loop
2420 PRINT "   CHIEF ENGINEER SCOTT REPORTS 'THE ENGINES WON'T TAKE";
2430 PRINT " WARP ";W1;"!'"
2431 GOTO 1990 : REM Main game loop

2470 PRINT "WARP ENGINES ARE DAMAGED.  MAXIUM SPEED = WARP 0.2"
2471 GOTO 1990 : REM Main game loop

2490 N=INT(W1*8+.5)
2491 IF ENERGY-N>=0 THEN GOTO 2590
2500 PRINT "ENGINEERING REPORTS   'INSUFFICIENT ENERGY AVAILABLE"
2510 PRINT "                       FOR MANEUVERING AT WARP";W1;"!'"
2530 IF SHIELD < N-ENERGY OR SHIELD_CONTROL<0 THEN GOTO 1990 : REM Main game loop
2550 PRINT "DEFLECTOR CONTROL ROOM ACKNOWLEDGES";S;"UNITS OF ENERGY"
2560 PRINT "                         PRESENTLY DEPLOYED TO SHIELDS."
2570 GOTO 1990 : REM Main game loop

2580 REM KLINGONS MOVE/FIRE ON MOVING STARSHIP . . .
2590 FOR I=1 TO KLINGONCNT
2591   IF KLINGONSTATUS(I,3)=0 THEN GOTO 2700
2610   A$="   "
2611   Z1=KLINGONSTATUS(I,1)
2612   Z2=KLINGONSTATUS(I,2)
2613   GOSUB 8670 : REM Place symbol in quadrant display
2614   GOSUB 8590 : REM Find empty location in quadrant
2660   KLINGONSTATUS(I,1)=Z1
2661   KLINGONSTATUS(I,2)=Z2
2662   A$="+K+"
2663   GOSUB 8670 : REM Place symbol in quadrant display
2700 NEXT I

2701 GOSUB 6000 : REM Process Klingon attacks
2702 D1=0
2703 D6=W1
2704 IF W1>=1 THEN D6=1

2720 ' Check warp engines damage status
2721 IF WARP_ENGINES >= 0 THEN GOTO 2730   ' Skip if not damaged
2722 WARP_ENGINES = WARP_ENGINES + D6      ' Apply repair progress
2723 IF WARP_ENGINES < 0 THEN GOTO 2730    ' Still damaged, skip to next device
2724 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2725 PRINT TAB(8);"WARP ENGINES REPAIR COMPLETED."

2730 ' Check short range sensors damage status
2731 IF SHORT_RANGE_SENSORS >= 0 THEN GOTO 2740   ' Skip if not damaged
2732 SHORT_RANGE_SENSORS = SHORT_RANGE_SENSORS + D6 ' Apply repair progress
2733 IF SHORT_RANGE_SENSORS < 0 THEN GOTO 2740    ' Still damaged, skip to next device
2734 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2735 PRINT TAB(8);"SHORT RANGE SENSORS REPAIR COMPLETED."

2740 ' Check long range sensors damage status
2741 IF LONG_RANGE_SENSORS >= 0 THEN GOTO 2750   ' Skip if not damaged
2742 LONG_RANGE_SENSORS = LONG_RANGE_SENSORS + D6 ' Apply repair progress
2743 IF LONG_RANGE_SENSORS < 0 THEN GOTO 2750    ' Still damaged, skip to next device
2744 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2745 PRINT TAB(8);"LONG RANGE SENSORS REPAIR COMPLETED."

2750 ' Check phaser control damage status
2751 IF PHASER_CONTROL >= 0 THEN GOTO 2760      ' Skip if not damaged
2752 PHASER_CONTROL = PHASER_CONTROL + D6       ' Apply repair progress
2753 IF PHASER_CONTROL < 0 THEN GOTO 2760       ' Still damaged, skip to next device
2754 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2755 PRINT TAB(8);"PHASER CONTROL REPAIR COMPLETED."

2760 ' Check photon tubes damage status
2761 IF PHOTON_TUBES >= 0 THEN GOTO 2770       ' Skip if not damaged
2762 PHOTON_TUBES = PHOTON_TUBES + D6          ' Apply repair progress
2763 IF PHOTON_TUBES < 0 THEN GOTO 2770        ' Still damaged, skip to next device
2764 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2765 PRINT TAB(8);"PHOTON TUBES REPAIR COMPLETED."

2770 ' Check damage control status
2771 IF DAMAGE_CONTROL >= 0 THEN GOTO 2780     ' Skip if not damaged
2772 DAMAGE_CONTROL = DAMAGE_CONTROL + D6      ' Apply repair progress
2773 IF DAMAGE_CONTROL < 0 THEN GOTO 2780      ' Still damaged, skip to next device
2774 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2775 PRINT TAB(8);"DAMAGE CONTROL REPAIR COMPLETED."

2780 ' Check shield control damage status
2781 IF SHIELD_CONTROL >= 0 THEN GOTO 2790     ' Skip if not damaged
2782 SHIELD_CONTROL = SHIELD_CONTROL + D6      ' Apply repair progress
2783 IF SHIELD_CONTROL < 0 THEN GOTO 2790      ' Still damaged, skip to next device
2784 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2785 PRINT TAB(8);"SHIELD CONTROL REPAIR COMPLETED."

2790 ' Check library computer damage status
2791 IF LIBRARY_COMPUTER >= 0 THEN GOTO 2800   ' Skip if not damaged
2792 LIBRARY_COMPUTER = LIBRARY_COMPUTER + D6  ' Apply repair progress
2793 IF LIBRARY_COMPUTER < 0 THEN GOTO 2800    ' Still damaged, skip to next device
2794 IF D1 = 0 THEN D1 = 1 : PRINT "DAMAGE CONTROL REPORT:  "
2795 PRINT TAB(8);"LIBRARY-COMPUTER REPAIR COMPLETED."

2800 REM 80% chance of damage or repair
2801 IF RND(1) > .2 THEN GOTO 3070

2910 R1=INT(RND(1)*7.98+1.01)
2911 REM 60% chance of damage, 40% chance of repair
2912 IF RND(1)>=.6 THEN GOTO 3000 : REM Repair

2920 ' Calculate random amount of damage
2921 DAMAGE_AMOUNT = RND(1)*5+1
2929 PRINT "DAMAGE CONTROL REPORT:  ";
2931 ' Apply random damage to a device based on R1
2932 IF R1=1 THEN WARP_ENGINES=WARP_ENGINES-DAMAGE_AMOUNT : PRINT "WARP ENGINES DAMAGED"
2933 IF R1=2 THEN SHORT_RANGE_SENSORS=SHORT_RANGE_SENSORS-DAMAGE_AMOUNT : PRINT "SHORT RANGE SENSORS DAMAGED" 
2934 IF R1=3 THEN LONG_RANGE_SENSORS=LONG_RANGE_SENSORS-DAMAGE_AMOUNT : PRINT "LONG RANGE SENSORS DAMAGED"
2935 IF R1=4 THEN PHASER_CONTROL=PHASER_CONTROL-DAMAGE_AMOUNT : PRINT "PHASER CONTROL DAMAGED"
2936 IF R1=5 THEN PHOTON_TUBES=PHOTON_TUBES-DAMAGE_AMOUNT : PRINT "PHOTON TUBES DAMAGED"
2937 IF R1=6 THEN DAMAGE_CONTROL=DAMAGE_CONTROL-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL DAMAGED"
2938 IF R1=7 THEN SHIELD_CONTROL=SHIELD_CONTROL-DAMAGE_AMOUNT : PRINT "SHIELD CONTROL DAMAGED"
2939 IF R1=8 THEN LIBRARY_COMPUTER=LIBRARY_COMPUTER-DAMAGE_AMOUNT : PRINT "LIBRARY-COMPUTER DAMAGED"
2968 PRINT
2969 GOTO 3070

3000 ' Calculate random amount of repair
3001 REPAIR_AMOUNT = RND(1)*3+1
3002 PRINT "DAMAGE CONTROL REPORT:  ";
3003 ' Improve repair state of a device based on R1
3004 IF R1=1 THEN WARP_ENGINES=WARP_ENGINES+REPAIR_AMOUNT : PRINT "WARP ENGINES STATE OF REPAIR IMPROVED"
3005 IF R1=2 THEN SHORT_RANGE_SENSORS=SHORT_RANGE_SENSORS+REPAIR_AMOUNT : PRINT "SHORT RANGE SENSORS STATE OF REPAIR IMPROVED"
3006 IF R1=3 THEN LONG_RANGE_SENSORS=LONG_RANGE_SENSORS+REPAIR_AMOUNT : PRINT "LONG RANGE SENSORS STATE OF REPAIR IMPROVED" 
3007 IF R1=4 THEN PHASER_CONTROL=PHASER_CONTROL+REPAIR_AMOUNT : PRINT "PHASER CONTROL STATE OF REPAIR IMPROVED"
3008 IF R1=5 THEN PHOTON_TUBES=PHOTON_TUBES+REPAIR_AMOUNT : PRINT "PHOTON TUBES STATE OF REPAIR IMPROVED"
3009 IF R1=6 THEN DAMAGE_CONTROL=DAMAGE_CONTROL+REPAIR_AMOUNT : PRINT "DAMAGE CONTROL STATE OF REPAIR IMPROVED"
3010 IF R1=7 THEN SHIELD_CONTROL=SHIELD_CONTROL+REPAIR_AMOUNT : PRINT "SHIELD CONTROL STATE OF REPAIR IMPROVED"
3011 IF R1=8 THEN LIBRARY_COMPUTER=LIBRARY_COMPUTER+REPAIR_AMOUNT : PRINT "LIBRARY-COMPUTER STATE OF REPAIR IMPROVED"
3038 PRINT


3060 REM BEGIN MOVING STARSHIP
3070 A$="   "
3071 Z1=INT(ENTERPRISESECTORX) 
3072 Z2=INT(ENTERPRISESECTORY) 
3073 GOSUB 8670 : REM Place symbol in quadrant display
3110 X1=DIRECTIONVECTOR(C1,1)+(DIRECTIONVECTOR(C1+1,1)-DIRECTIONVECTOR(C1,1))*(C1-INT(C1))
3111 X=ENTERPRISESECTORX
3112 Y=ENTERPRISESECTORY
3140 X2=DIRECTIONVECTOR(C1,2)+(DIRECTIONVECTOR(C1+1,2)-DIRECTIONVECTOR(C1,2))*(C1-INT(C1))
3141 PREVIOUSQUADRANTX=ENTERPRISEQUADRANTX
3142 PREVIOUSQUADRANTY=ENTERPRISEQUADRANTY
3170 FOR I=1 TO N
3171   ENTERPRISESECTORX=ENTERPRISESECTORX+X1
3172   ENTERPRISESECTORY=ENTERPRISESECTORY+X2
3173   IF ENTERPRISESECTORX<1 OR ENTERPRISESECTORX>=9 OR ENTERPRISESECTORY<1 OR ENTERPRISESECTORY>=9 THEN GOTO 3500
3240   S8=INT(ENTERPRISESECTORX)*24+INT(ENTERPRISESECTORY)*3-26
3241   IF MID$(Q$,S8,2)="  " THEN GOTO 3360
3320   ENTERPRISESECTORX=INT(ENTERPRISESECTORX-X1)
3321   ENTERPRISESECTORY=INT(ENTERPRISESECTORY-X2)
3322   PRINT "WARP ENGINES SHUT DOWN AT ";
3350   PRINT "SECTOR";ENTERPRISESECTORX;",";ENTERPRISESECTORY;"DUE TO BAD NAVAGATION"
3351   GOTO 3370
3360 NEXT I

3361 ENTERPRISESECTORX=INT(ENTERPRISESECTORX)
3362 ENTERPRISESECTORY=INT(ENTERPRISESECTORY)
3370 A$="<*>"
3371 Z1=INT(ENTERPRISESECTORX)
3372 Z2=INT(ENTERPRISESECTORY)
3373 GOSUB 8670 : REM Place symbol in quadrant display
3374 GOSUB 3910 : Update energy after maneuver
3375 T8=1
3430 IF W1<1 THEN T8=.1*INT(10*W1)
3450 STARDATE=STARDATE+T8
3451 IF STARDATE>STARDATESTART+MISSIONLENGTH THEN GOTO 6220
3470 REM SEE IF DOCKED, THEN GET COMMAND
3480 GOTO 1980

3490 REM EXCEEDED QUADRANT LIMITS
3500 X=8*ENTERPRISEQUADRANTX+X+N*X1
3501 Y=8*ENTERPRISEQUADRANTY+Y+N*X2
3502 ENTERPRISEQUADRANTX=INT(X/8)
3503 ENTERPRISEQUADRANTY=INT(Y/8)
3504 ENTERPRISESECTORX=INT(X-ENTERPRISEQUADRANTX*8)
3550 ENTERPRISESECTORY=INT(Y-ENTERPRISEQUADRANTY*8)
3551 IF ENTERPRISESECTORX=0 THEN ENTERPRISEQUADRANTX=ENTERPRISEQUADRANTX-1 : ENTERPRISESECTORX=8
3590 IF ENTERPRISESECTORY=0 THEN ENTERPRISEQUADRANTY=ENTERPRISEQUADRANTY-1 : ENTERPRISESECTORY=8
3620 X5=0
3621 IF ENTERPRISEQUADRANTX<1 THEN X5=1 : ENTERPRISEQUADRANTX=1 : ENTERPRISESECTORX=1
3670 IF ENTERPRISEQUADRANTX>8 THEN X5=1 : ENTERPRISEQUADRANTX=8 : ENTERPRISESECTORX=8
3710 IF ENTERPRISEQUADRANTY<1 THEN X5=1 : ENTERPRISEQUADRANTY=1 : ENTERPRISESECTORY=1
3750 IF ENTERPRISEQUADRANTY>8 THEN X5=1 : ENTERPRISEQUADRANTY=8 : ENTERPRISESECTORY=8
3790 IF X5=0 THEN GOTO 3860

3800 PRINT "LT. UHURA REPORTS MESSAGE FROM STARFLEET COMMAND:"
3810 PRINT "  'PERMISSION TO ATTEMPT CROSSING OF GALACTIC PERIMETER"
3820 PRINT "  IS HEREBY *DENIED*.  SHUT DOWN YOUR ENGINES.'"
3830 PRINT "CHIEF ENGINEER SCOTT REPORTS  'WARP ENGINES SHUT DOWN"
3840 PRINT "  AT SECTOR";ENTERPRISESECTORX;",";ENTERPRISESECTORY;"OF QUADRANT";ENTERPRISEQUADRANTX;",";ENTERPRISEQUADRANTY;".'"
3850 IF STARDATE>STARDATESTART+MISSIONLENGTH THEN GOTO 6220
3860 IF 8*ENTERPRISEQUADRANTX+ENTERPRISEQUADRANTY=8*PREVIOUSQUADRANTX+PREVIOUSQUADRANTY THEN GOTO 3370
3870 STARDATE=STARDATE+1
3871 GOSUB 3910 : Update energy after maneuver
3872 GOTO 1320

3900 REM MANEUVER ENERGY SHIELD/R **
3910 ENERGY=ENERGY-N-10
3911 IF ENERGY>=0 THEN RETURN
3930 PRINT "SHIELD CONTROL SUPPLIES ENERGY TO COMPLETE THE MANEUVER."
3940 SHIELD=SHIELD+ENERGY
3941 ENERGY=0
3942 IF SHIELD<=0 THEN SHIELD=0
3980 RETURN

3989 REM ------------------------------------------------------------------------
3990 REM                        LRS  (FOR LONG RANGE SENSOR SCAN)
3991 REM ------------------------------------------------------------------------
4000 IF LONG_RANGE_SENSORS<0 THEN PRINT "LONG RANGE SENSORS ARE INOPERABLE" : GOTO 1990 : REM Main game loop
4030 PRINT "LONG RANGE SCAN FOR QUADRANT";ENTERPRISEQUADRANTX;",";ENTERPRISEQUADRANTY
4040 O1$="-------------------"
4041 PRINT O1$
4060 FOR I=ENTERPRISEQUADRANTX-1 TO ENTERPRISEQUADRANTX+1
4061   LRSBUFFER(1)=-1
4062   LRSBUFFER(2)=-2
4063   LRSBUFFER(3)=-3
4064   FOR J=ENTERPRISEQUADRANTY-1 TO ENTERPRISEQUADRANTY+1
4120     IF I>0 AND I<9 AND J>0 AND J<9 THEN LRSBUFFER(J-ENTERPRISEQUADRANTY+2)=GALAXY(I,J) : VISITEDQUADRANTS(I,J)=GALAXY(I,J)
4180   NEXT J
4181   FOR L=1 TO 3
4182     PRINT ": ";
4183     IF LRSBUFFER(L)<0 THEN PRINT "*** ";:GOTO 4230
4210     PRINT RIGHT$(STR$(LRSBUFFER(L)+1000),3);" ";
4230   NEXT L 
4231   PRINT ":"
4232   PRINT O1$ 
4233 NEXT I
4234 GOTO 1990 : REM Main game loop

4249 REM ------------------------------------------------------------------------
4250 REM                        PHA  (TO FIRE PHASERS)
4251 REM ------------------------------------------------------------------------
4260 IF PHASER_CONTROL<0 THEN PRINT "PHASERS INOPERATIVE" : GOTO 1990 : REM Main game loop
4265 IF KLINGONCNT>0 THEN GOTO 4330
4270 PRINT "SCIENCE OFFICER SPOCK REPORTS  'SENSORS SHOW NO ENEMY SHIPS"
4280 PRINT "                                IN THIS QUADRANT'"
4281 GOTO 1990 : REM Main game loop

4330 IF LIBRARY_COMPUTER<0 THEN PRINT "COMPUTER FAILURE HAMPERS ACCURACY"
4350 PRINT "PHASERS LOCKED ON TARGET;  ";
4360 PRINT "ENERGY AVAILABLE =";ENERGY;"UNITS"
4370 INPUT"NUMBER OF UNITS TO FIRE";X
4371 IF X<=0 THEN GOTO 1990 : REM Main game loop
4400 IF ENERGY-X<0 THEN GOTO 4360
4410 ENERGY=ENERGY-X
4411 IF SHIELD_CONTROL<0 THEN X=X*RND(1)
4450 H1=INT(X/KLINGONCNT)
4451 FOR I=1 TO 3
4452   IF KLINGONSTATUS(I,3)<=0 THEN GOTO 4670
4480   H=INT((H1/FND(0))*(RND(1)+2))
4481   IF H>.15*KLINGONSTATUS(I,3) THEN GOTO 4530
4500   PRINT "SENSORS SHOW NO DAMAGE TO ENEMY AT ";KLINGONSTATUS(I,1);",";KLINGONSTATUS(I,2)
4501   GOTO 4670
4530   KLINGONSTATUS(I,3)=KLINGONSTATUS(I,3)-H
4531   PRINT H;"UNIT HIT ON KLINGON AT SECTOR";KLINGONSTATUS(I,1);",";
4550   PRINT KLINGONSTATUS(I,2)
4551   IF KLINGONSTATUS(I,3)<=0 THEN PRINT "*** KLINGON DESTROYED ***" : GOTO 4580
4560   PRINT "   (SENSORS SHOW";KLINGONSTATUS(I,3);"UNITS REMAINING)"
4561   GOTO 4670
4580   KLINGONCNT=KLINGONCNT-1
4581   TOTALKLINGONCNT=TOTALKLINGONCNT-1
4582   Z1=KLINGONSTATUS(I,1)
4583   Z2=KLINGONSTATUS(I,2)
4584   A$="   "
4585   GOSUB 8670 : REM Place symbol in quadrant display
4650   KLINGONSTATUS(I,3)=0
4651   GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)=GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)-100
4652   VISITEDQUADRANTS(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)=GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)
4653   IF TOTALKLINGONCNT<=0 THEN GOTO 6370
4670 NEXT I
4671 GOSUB 6000 : REM Process Klingon attacks
4672 GOTO 1990 : REM Main game loop

4689 REM ------------------------------------------------------------------------
4690 REM                        TOR  (TO FIRE PHOTON TORPEDOES)
4691 REM ------------------------------------------------------------------------
4700 IF TORPEDOCNT<=0 THEN PRINT "ALL PHOTON TORPEDOES EXPENDED" : GOTO 1990 : REM Main game loop
4730 IF PHOTON_TUBES<0 THEN PRINT "PHOTON TUBES ARE NOT OPERATIONAL" : GOTO 1990 : REM Main game loop
4760 INPUT"PHOTON TORPEDO COURSE (1-9)";C1
4761 IF C1=9 THEN C1=1
4780 IF C1>=1 AND C1<9 THEN GOTO 4850
4790 PRINT "ENSIGN CHEKOV REPORTS,  'INCORRECT COURSE DATA, SIR!'"
4800 GOTO 1990 : REM Main game loop
4850 X1=DIRECTIONVECTOR(C1,1)+(DIRECTIONVECTOR(C1+1,1)-DIRECTIONVECTOR(C1,1))*(C1-INT(C1))
4851 ENERGY=ENERGY-2
4852 TORPEDOCNT=TORPEDOCNT-1
4860 X2=DIRECTIONVECTOR(C1,2)+(DIRECTIONVECTOR(C1+1,2)-DIRECTIONVECTOR(C1,2))*(C1-INT(C1))
4861 X=ENTERPRISESECTORX
4862 Y=ENTERPRISESECTORY
4910 PRINT "TORPEDO TRACK:"
4920 X=X+X1
4921 Y=Y+X2
4922 X3=INT(X+.5)
4923 Y3=INT(Y+.5)
4960 IF X3<1 OR X3>8 OR Y3<1 OR Y3>8 THEN GOTO 5490
5000 PRINT "               ";X3;",";Y3
5001 A$="   "
5002 Z1=X
5003 Z2=Y
5004 GOSUB 8830 : REM Check for object at coordinates
5050 IF Z3<>0 THEN GOTO 4920
5060 A$="+K+"
5061 Z1=X
5062 Z2=Y
5063 GOSUB 8830 : REM Check for object at coordinates
5064 IF Z3=0 THEN GOTO 5210
5110 PRINT "*** KLINGON DESTROYED ***"
5111 KLINGONCNT=KLINGONCNT-1
5112 TOTALKLINGONCNT=TOTALKLINGONCNT-1
5113 IF TOTALKLINGONCNT<=0 THEN GOTO 6370
5150 FOR I=1 TO 3 
5151   IF X3=KLINGONSTATUS(I,1) AND Y3=KLINGONSTATUS(I,2) THEN GOTO 5190
5180 NEXT I 
5181 I=3
5190 KLINGONSTATUS(I,3)=0
5191 GOTO 5430

5210 A$=" * "
5211 Z1=X 
5212 Z2=Y 
5213 GOSUB 8830 : REM Check for object at coordinates 
5214 IF Z3=0 THEN GOTO 5280
5260 PRINT "STAR AT";X3;",";Y3;"ABSORBED TORPEDO ENERGY."
5261 GOSUB 6000 : REM Process Klingon attacks
5262 GOTO 1990 : REM Main game loop

5280 A$=">!<"
5281 Z1=X 
5282 Z2=Y 
5283 GOSUB 8830 : REM Check for object at coordinates 
5284 IF Z3=0 THEN GOTO 4760
5330 PRINT "*** STARBASE DESTROYED ***"
5331 BASECNT=BASECNT-1 
5332 TOTALBASECNT=TOTALBASECNT-1
5360 IF TOTALBASECNT>0 OR TOTALKLINGONCNT>T-STARDATESTART-MISSIONLENGTH THEN GOTO 5400
5370 PRINT "THAT DOES IT, CAPTAIN!!  YOU ARE HEREBY RELIEVED OF COMMAND"
5380 PRINT "AND SENTENCED TO 99 STARDATES AT HARD LABOR ON CYGNUS 12!!"
5390 GOTO 6270

5400 PRINT "STARFLEET COMMAND REVIEWING YOUR RECORD TO CONSIDER"
5410 PRINT "COURT MARTIAL!"
5411 ISDOCKED=0
5430 Z1=X
5431 Z2=Y
5432 A$="   "
5433 GOSUB 8670 : REM Place symbol in quadrant display
5470 GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)=KLINGONCNT*100+BASECNT*10+STARCNT
5471 VISITEDQUADRANTS(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)=GALAXY(ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)
5472 GOSUB 6000 : REM Process Klingon attacks
5473 GOTO 1990 : REM Main game loop
5490 PRINT "TORPEDO MISSED"
5491 GOSUB 6000 : REM Process Klingon attacks
5492 GOTO 1990 : REM Main game loop

5519 REM ------------------------------------------------------------------------
5520 REM                        SHE  (TO RAISE OR LOWER SHIELDS)
5521 REM ------------------------------------------------------------------------
5530 IF SHIELD_CONTROL<0 THEN PRINT "SHIELD CONTROL INOPERABLE" : GOTO 1990 : REM Main game loop
5560 PRINT "ENERGY AVAILABLE =";ENERGY+SHIELD;
5561 INPUT"NUMBER OF UNITS TO SHIELDS";X
5580 IF X<0 OR SHIELD=X THEN PRINT "<SHIELDS UNCHANGED>" : GOTO 1990 : REM Main game loop
5590 IF X<=ENERGY+SHIELD THEN GOTO 5630
5600 PRINT "SHIELD CONTROL REPORTS  'THIS IS NOT THE FEDERATION TREASURY.'"
5610 PRINT "<SHIELDS UNCHANGED>"
5611 GOTO 1990 : REM Main game loop
5630 ENERGY=ENERGY+SHIELD-X
5631 SHIELD=X
5632 PRINT "DEFLECTOR CONTROL ROOM REPORT:"
5660 PRINT "  'SHIELDS NOW AT";INT(SHIELD);"UNITS PER YOUR COMMAND.'"
5661 GOTO 1990 : REM Main game loop

5679 REM ------------------------------------------------------------------------
5680 REM                        DAM  (FOR DAMAGE CONTROL REPORTS)
5681 REM ------------------------------------------------------------------------
5690 IF DAMAGE_CONTROL>=0 THEN GOTO 5910
5700 PRINT "DAMAGE CONTROL REPORT NOT AVAILABLE"
5701 IF ISDOCKED=0 THEN GOTO 1990 : REM Main game loop
5720 D3 = 0
5721 ' Calculate total damage
5722 IF WARP_ENGINES<0 THEN D3=D3+.1
5723 IF SHORT_RANGE_SENSORS<0 THEN D3=D3+.1
5724 IF LONG_RANGE_SENSORS<0 THEN D3=D3+.1
5725 IF PHASER_CONTROL<0 THEN D3=D3+.1
5726 IF PHOTON_TUBES<0 THEN D3=D3+.1
5727 IF DAMAGE_CONTROL<0 THEN D3=D3+.1
5728 IF SHIELD_CONTROL<0 THEN D3=D3+.1
5729 IF LIBRARY_COMPUTER<0 THEN D3=D3+.1
5760 IF D3=0 THEN GOTO 1990 : REM Main game loop
5780 PRINT
5781 D3=D3+D4
5782 IF D3>=1 THEN D3=.9
5810 PRINT "TECHNICIANS STANDING BY TO EFFECT REPAIRS TO YOUR SHIP;"
5820 PRINT "ESTIMATED TIME TO REPAIR:";.01*INT(100*D3);"STARDATES"
5840 INPUT "WILL YOU AUTHORIZE THE REPAIR ORDER (Y/N)";A$
5860 IF A$<>"Y" THEN GOTO 1990 : REM Main game loop
5870 WARP_ENGINES = 0
5871 SHORT_RANGE_SENSORS = 0
5872 LONG_RANGE_SENSORS = 0
5873 PHASER_CONTROL = 0
5874 PHOTON_TUBES = 0
5875 DAMAGE_CONTROL = 0
5876 SHIELD_CONTROL = 0
5877 LIBRARY_COMPUTER = 0
5890 STARDATE=STARDATE+D3+.1
5910 PRINT
5911 PRINT "DEVICE              STATE OF REPAIR"
5912 PRINT "WARP ENGINES        ";INT(WARP_ENGINES*100)*.01
5913 PRINT "SHORT RANGE SENSORS ";INT(SHORT_RANGE_SENSORS*100)*.01
5914 PRINT "LONG RANGE SENSORS  ";INT(LONG_RANGE_SENSORS*100)*.01
5915 PRINT "PHASER CONTROL      ";INT(PHASER_CONTROL*100)*.01
5916 PRINT "PHOTON TUBES        ";INT(PHOTON_TUBES*100)*.01
5917 PRINT "DAMAGE CONTROL      ";INT(DAMAGE_CONTROL*100)*.01
5918 PRINT "SHIELD CONTROL      ";INT(SHIELD_CONTROL*100)*.01
5919 PRINT "LIBRARY-COMPUTER    ";INT(LIBRARY_COMPUTER*100)*.01
5950 PRINT
5951 PRINT
5952 IF ISDOCKED<>0 THEN GOTO 5720
5980 GOTO 1990 : REM Main game loop

5990 REM KLINGONS SHOOTING
6000 IF KLINGONCNT<=0 THEN RETURN
6010 IF ISDOCKED<>0 THEN PRINT "STARBASE SHIELDS PROTECT THE ENTERPRISE":RETURN
6040 FOR I=1 TO 3
6041   IF KLINGONSTATUS(I,3)<=0 THEN GOTO 6200
6060   H=INT((KLINGONSTATUS(I,3)/FND(1))*(2+RND(1)))
6061   SHIELD=SHIELD-H
6062   KLINGONSTATUS(I,3)=KLINGONSTATUS(I,3)/(3+RND(0))
6080   PRINT H;"UNIT HIT ON ENTERPRISE FROM SECTOR";KLINGONSTATUS(I,1);",";KLINGONSTATUS(I,2)
6090   IF SHIELD<=0 THEN GOTO 6240
6100   PRINT "      <SHIELDS DOWN TO";SHIELD;"UNITS>"
6101   IF H<20 THEN GOTO 6200
6120   IF RND(1)>.6 OR H/SHIELD <= .02 THEN GOTO 6200
6140   R1=INT(RND(1)*7.98+1.01)
6141   ' Calculate damage amount
6142   DAMAGE_AMOUNT = H/SHIELD + .5*RND(1) 
6144   ' Handle damage to specific device based on random number R1
6145   IF R1=1 THEN WARP_ENGINES=WARP_ENGINES-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS WARP ENGINES DAMAGED BY THE HIT'"
6150   IF R1=2 THEN SHORT_RANGE_SENSORS=SHORT_RANGE_SENSORS-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS SHORT RANGE SENSORS DAMAGED BY THE HIT'"  
6155   IF R1=3 THEN LONG_RANGE_SENSORS=LONG_RANGE_SENSORS-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS LONG RANGE SENSORS DAMAGED BY THE HIT'"
6160   IF R1=4 THEN PHASER_CONTROL=PHASER_CONTROL-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS PHASER CONTROL DAMAGED BY THE HIT'"
6165   IF R1=5 THEN PHOTON_TUBES=PHOTON_TUBES-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS PHOTON TUBES DAMAGED BY THE HIT'"
6170   IF R1=6 THEN DAMAGE_CONTROL=DAMAGE_CONTROL-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS DAMAGE CONTROL DAMAGED BY THE HIT'"
6175   IF R1=7 THEN SHIELD_CONTROL=SHIELD_CONTROL-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS SHIELD CONTROL DAMAGED BY THE HIT'"
6180   IF R1=8 THEN LIBRARY_COMPUTER=LIBRARY_COMPUTER-DAMAGE_AMOUNT : PRINT "DAMAGE CONTROL REPORTS LIBRARY-COMPUTER DAMAGED BY THE HIT'"
6200 NEXT I
6201 RETURN

6210 REM END OF GAME
6220 PRINT "IT IS STARDATE";STARDATE
6221 GOTO 6270

6240 PRINT
6241 PRINT "THE ENTERPRISE HAS BEEN DESTROYED.  THEN FEDERATION ";
6250 PRINT "WILL BE CONQUERED"
6251 GOTO 6220

6270 PRINT "THERE WERE";TOTALKLINGONCNT;"KLINGON BATTLE CRUISERS LEFT AT"
6280 PRINT "THE END OF YOUR MISSION."
6290 PRINT
6291 PRINT
6292 IF TOTALBASECNT=0 THEN GOTO 6360
6310 PRINT "THE FEDERATION IS IN NEED OF A NEW STARSHIP COMMANDER"
6320 PRINT "FOR A SIMILAR MISSION -- IF THERE IS A VOLUNTEER,"
6330 INPUT"LET HIM STEP FORWARD AND ENTER 'AYE'";A$
6331 IF A$="AYE" THEN GOTO 10
6360 END

6370 PRINT "CONGRULATION, CAPTAIN!  THEN LAST KLINGON BATTLE CRUISER"
6380 PRINT "MENACING THE FDERATION HAS BEEN DESTROYED."
6381 PRINT
6400 PRINT "YOUR EFFICIENCY RATING IS";1000*(INITIALKLINGONCNT/(STARDATE-STARDATESTART))^2
6401 GOTO 6290

6419 REM ------------------------------------------------------------------------
6420 REM                        SRS  (FOR SHORT RANGE SENSOR SCAN)
6421 REM ------------------------------------------------------------------------
6430 FOR I = ENTERPRISESECTORX-1 TO ENTERPRISESECTORX+1
6431   FOR J = ENTERPRISESECTORY-1 TO ENTERPRISESECTORY+1
6450     IF INT(I+.5)<1 OR INT(I+.5)>8 OR INT(J+.5)<1 OR INT(J+.5)>8 THEN GOTO 6540
6490     A$=">!<"
6491     Z1=I 
6492     Z2=J 
6493     GOSUB 8830 : REM Check for object at coordinates 
6494     IF Z3=1 THEN GOTO 6580
6540   NEXT J
6541 NEXT I
6542 ISDOCKED=0
6543 GOTO 6650

6580 ISDOCKED=1
6581 C$="DOCKED"
6582 ENERGY=INITIALENERGY
6583 TORPEDOCNT=INITIALTORPEDOES
6620 PRINT "SHIELDS DROPPED FOR DOCKING PURPOSES"
6621 SHIELD=0
6622 GOTO 6720
6650 IF KLINGONCNT>0 THEN C$="*RED*" : GOTO 6720
6660 C$="GREEN"
6661 IF ENERGY<INITIALENERGY*.1 THEN C$="YELLOW"
6720 IF SHORT_RANGE_SENSORS>=0 THEN GOTO 6770
6730 PRINT
6731 PRINT "*** SHORT RANGE SENSORS ARE OUT ***"
6732 PRINT
6733 RETURN

6770 O1$="---------------------------------"
6771 PRINT O1$
6772 FOR I=1 TO 8
6820   FOR J=(I-1)*24+1 TO (I-1)*24+22 STEP 3
6821     PRINT " ";MID$(Q$,J,3);
6822   NEXT J
6830   ON I GOTO 6850,6900,6960,7020,7070,7120,7180,7240
6850   PRINT "        STARDATE          ";INT(STARDATE*10)*.1
6851   GOTO 7260
6900   PRINT "        CONDITION          ";C$
6901   GOTO 7260
6960   PRINT "        QUADRANT          ";ENTERPRISEQUADRANTX;",";ENTERPRISEQUADRANTY
6961   GOTO 7260
7020   PRINT "        SECTOR            ";ENTERPRISESECTORX;",";ENTERPRISESECTORY
7021   GOTO 7260
7070   PRINT "        PHOTON TORPEDOES  ";INT(TORPEDOCNT)
7071   GOTO 7260
7120   PRINT "        TOTAL ENERGY      ";INT(ENERGY+SHIELD)
7121   GOTO 7260
7180   PRINT "        SHIELDS           ";INT(SHIELD)
7181   GOTO 7260
7240   PRINT "        KLINGONS REMAINING";INT(TOTALKLINGONCNT)
7260 NEXT I
7261 PRINT O1$
7262 RETURN

7279 REM ------------------------------------------------------------------------
7280 REM                        COM  (TO CALL ON LIBRARY-COMPUTER)
7281 REM ------------------------------------------------------------------------
7290 IF LIBRARY_COMPUTER<0 THEN PRINT "COMPUTER DISABLED" : GOTO 1990 : REM Main game loop
7320 INPUT"COMPUTER ACTIVE AND AWAITING COMMAND";A
7321 IF A<0 THEN GOTO 1990 : REM Main game loop
7350 PRINT
7351 H8=1
7352 ON A+1 GOTO 7540,7900,8070,8500,8150,7400
7360 PRINT "FUNCTIONS AVAILABLE FROM LIBRARY-COMPUTER:"
7370 PRINT "   0 = CUMULATIVE GALACTIC RECORD"
7372 PRINT "   1 = STATUS REPORT"
7374 PRINT "   2 = PHOTON TORPEDO DATA"
7376 PRINT "   3 = STARBASE NAV DATA"
7378 PRINT "   4 = DIRECTION/DISTANCE CALCULATOR"
7380 PRINT "   5 = GALAXY 'REGION NAME' MAP"
7381 PRINT
7382 GOTO 7320

7389 REM ------------------------------------------------------------------------
7390 REM                        5 = GALAXY 'REGION NAME' MAP
7391 REM ------------------------------------------------------------------------
7400 H8=0
7401 G5=1
7402 PRINT "                        THE GALAXY"
7403 GOTO 7550

7529 REM ------------------------------------------------------------------------
7530 REM                        0 = CUMULATIVE GALACTIC RECORD
7531 REM ------------------------------------------------------------------------
7540 PRINT
7541 PRINT "        ";
7544 PRINT "COMPUTER RECORD OF GALAXY FOR QUADRANT";ENTERPRISEQUADRANTX;",";ENTERPRISEQUADRANTY
7546 PRINT
7550 PRINT "       1     2     3     4     5     6     7     8"
7560 O1$="     ----- ----- ----- ----- ----- ----- ----- -----"
7570 PRINT O1$
7571 FOR I = 1 TO 8
7572   PRINT I;
7573   IF H8 = 0 THEN GOTO 7740
7630   FOR J = 1 TO 8
7631     PRINT "   ";
7632     IF VISITEDQUADRANTS(I,J) = 0 THEN PRINT "***"; : GOTO 7720
7700     PRINT RIGHT$(STR$(VISITEDQUADRANTS(I,J)+1000),3);
7720   NEXT J
7721   GOTO 7850
7740   Z4=I
7741   Z5=1
7742   GOSUB 9030
7743   J0=INT(15-.5*LEN(G2$))
7744   PRINT TAB(J0);G2$;
7800   Z5=5
7801   GOSUB 9030
7802   J0=INT(39-.5*LEN(G2$))
7803   PRINT TAB(J0);G2$;
7850   PRINT
7851   PRINT O1$
7852 NEXT I
7853 PRINT
7854 GOTO 1990 : REM Main game loop

7889 REM ------------------------------------------------------------------------
7890 REM                        1 = STATUS REPORT
7891 REM ------------------------------------------------------------------------
7900 PRINT "   STATUS REPORT:"
7901 X$=""
7902 IF TOTALKLINGONCNT>1 THEN X$="S"
7940 PRINT "KLINGON";X$;" LEFT: ";TOTALKLINGONCNT
7960 PRINT "MISSION MUST BE COMPLETED IN";.1*INT((STARDATESTART+MISSIONLENGTH-STARDATE)*10);"STARDATES"
7970 X$="S"
7971 IF TOTALBASECNT<2 THEN X$="" : IF TOTALBASECNT<1 THEN GOTO 8010
7980 PRINT "THE FEDERATION IS MAINTAINING";TOTALBASECNT;"STARBASE";X$;" IN THE GALAXY"
7990 GOTO 5690
8010 PRINT "YOUR STUPIDITY HAS LEFT YOU ON YOUR ON IN"
8020 PRINT "  THE GALAXY -- YOU HAVE NO STARBASES LEFT!"
8021 GOTO 5690

8059 REM ------------------------------------------------------------------------
8060 REM                        2 = PHOTON TORPEDO DATA
8061 REM ------------------------------------------------------------------------
8070 IF KLINGONCNT<=0 THEN GOTO 4270
8080 X$=""
8081 IF KLINGONCNT>1 THEN X$="S"
8090 PRINT "FROM ENTERPRISE TO KLINGON BATTLE CRUSER";X$
8100 H8 = 0
8101 FOR I = 1 TO 3
8102   IF KLINGONSTATUS(I,3) <= 0 THEN GOTO 8480
8110   W1=KLINGONSTATUS(I,1) 
8111   X=KLINGONSTATUS(I,2)
8120   C1=ENTERPRISESECTORX
8121   A=ENTERPRISESECTORY
8122   GOTO 8220

8150   REM ------------------------------------------------------------------------
8151   REM                        4 = DIRECTION/DISTANCE CALCULATOR
8152   REM ------------------------------------------------------------------------
8160   PRINT "DIRECTION/DISTANCE CALCULATOR:"
8161   PRINT "YOU ARE AT QUADRANT ";ENTERPRISEQUADRANTX;",";ENTERPRISEQUADRANTY;" SECTOR ";ENTERPRISESECTORX;",";ENTERPRISESECTORY
8170   PRINT "PLEASE ENTER"
8171   INPUT"  INITIAL COORDINATES (X,Y)";C1,A
8200   INPUT"  FINAL COORDINATES (X,Y)";W1,X
8220   X=X-A
8221   A=C1-W1
8222   IF X<0 THEN GOTO 8350
8250   IF A<0 THEN GOTO 8410
8260   IF X>0 THEN GOTO 8280
8270   IF A=0 THEN C1=5 : GOTO 8290
8280   C1=1
8290   IF ABS(A)<=ABS(X) THEN GOTO 8330
8310   PRINT "DIRECTION =";C1+(((ABS(A)-ABS(X))+ABS(A))/ABS(A))
8311   GOTO 8460
8330   PRINT "DIRECTION =";C1+(ABS(A)/ABS(X))
8331   GOTO 8460
8350   IF A>0 THEN C1=3 : GOTO 8420
8360   IF X<>0 THEN C1=5 : GOTO 8290
8410   C1=7
8420   IF ABS(A)>=ABS(X) THEN GOTO 8450
8430   PRINT "DIRECTION =";C1+(((ABS(X)-ABS(A))+ABS(X))/ABS(X))
8431   GOTO 8460
8450   PRINT "DIRECTION =";C1+(ABS(X)/ABS(A))
8460   PRINT "DISTANCE =";SQR(X^2+A^2)
8461   IF H8=1 THEN GOTO 1990 : REM Main game loop
8480 NEXT I
8481 GOTO 1990 : REM Main game loop

8499 REM ------------------------------------------------------------------------
8500 REM                        3 = STARBASE NAV DATA
8501 REM ------------------------------------------------------------------------
8510 IF BASECNT<>0 THEN PRINT "FROM ENTERPRISE TO STARBASE:":W1=B4 : X=B5 : GOTO 8120
8511 PRINT "MR. SPOCK REPORTS,  'SENSORS SHOW NO STARBASES IN THIS";
8520 PRINT " QUADRANT.'"
8521 GOTO 1990 : REM Main game loop

8580 REM FIND EMPTY PLACE IN QUADRANT (FOR THINGS)
8590 R1=INT(RND(1)*7.98+1.01)
8591 R2=INT(RND(1)*7.98+1.01)
8592 A$="   "
8593 Z1=R1
8594 Z2=R2
8595 GOSUB 8830 : REM Check for object at coordinates
8596 IF Z3=0 THEN GOTO 8590
8600 RETURN

8660 REM INSERT IN STRING ARRAY FOR QUADRANT
8670 S8=INT(Z2-.5)*3+INT(Z1-.5)*24+1
8675 IF LEN(A$)<>3 THEN PRINT "ERROR":STOP
8680 IF S8=1 THEN Q$=A$+RIGHT$(Q$,189) : RETURN
8690 IF S8=190 THEN Q$=LEFT$(Q$,189)+A$ : RETURN
8700 Q$=LEFT$(Q$,S8-1)+A$+RIGHT$(Q$,190-S8)
8701 RETURN

8820 REM STRING COMPARISON IN QUADRANT ARRAY
8830 Z1=INT(Z1+.5)
8831 Z2=INT(Z2+.5)
8832 S8=(Z2-1)*3+(Z1-1)*24+1
8833 Z3=0
8890 IF MID$(Q$,S8,3)<>A$ THEN RETURN
8900 Z3=1
8901 RETURN

9010 REM QUADRANT NAME IN G2$ FROM Z4,Z5 (=ENTERPRISEQUADRANTX,ENTERPRISEQUADRANTY)
9020 REM CALL WITH G5=1 TO GET REGION NAME ONLY
9030 IF Z5<=4 THEN ON Z4 GOTO 9040,9050,9060,9070,9080,9090,9100,9110
9035 GOTO 9120
9040 G2$="ANTARES" : GOTO 9210
9050 G2$="RIGEL" : GOTO 9210
9060 G2$="PROCYON" : GOTO 9210
9070 G2$="VEGA" : GOTO 9210
9080 G2$="CANOPUS" : GOTO 9210
9090 G2$="ALTAIR" : GOTO 9210
9100 G2$="SAGITTARIUS" : GOTO 9210
9110 G2$="POLLUX" : GOTO 9210
9120 ON Z4 GOTO 9130,9140,9150,9160,9170,9180,9190,9200
9130 G2$="SIRIUS" : GOTO 9210
9140 G2$="DENEB" : GOTO 9210
9150 G2$="CAPELLA" : GOTO 9210
9160 G2$="BETELGEUSE" : GOTO 9210
9170 G2$="ALDEBARAN" : GOTO 9210
9180 G2$="REGULUS" : GOTO 9210
9190 G2$="ARCTURUS" : GOTO 9210
9200 G2$="SPICA"
9210 IF G5<>1 THEN ON Z5 GOTO 9230, 9240, 9250, 9260, 9230, 9240, 9250, 9260
9220 RETURN
9230 G2$=G2$+" I":RETURN
9240 G2$=G2$+" II":RETURN
9250 G2$=G2$+" III":RETURN
9260 G2$=G2$+" IV":RETURN
