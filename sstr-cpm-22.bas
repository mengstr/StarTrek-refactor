100 REM Direction indices for DIRECTION array
101 XDIR = 1            : REM Constant for X-coordinate direction vector
102 YDIR = 2            : REM Constant for Y-coordinate direction vector

110 REM Device indices
111 WARPENGINES = 1     : REM Constant for Warp engines device index
112 SRSSENSOR = 2       : REM Constant for Short range sensor device index
113 LRSSENSOR = 3       : REM Constand for Long range sensor device index
114 PHASERS = 4         : REM Constand for Phaser control device index
115 PHOTONTORPEDO = 5   : REM Constand for Photon torpedo device index
116 DAMAGECONTROL = 6   : REM Constant for Damage control device index
117 SHIELDS = 7         : REM Constant for Shield control device index
118 COMPUTER = 8        : REM Constant for Library-computer device index

120 REM Indices for the KLINGONS array
120 KLINGX = 1          : REM Constant for KLINGONS array index for X coordinate
121 KLINGY = 2          : REM Constant for KLINGONS array index for Y coordinate  
122 KLINGSTR = 3        : REM Constant for KLINGONS array index for strength

130 SPACE25$ = "                         " : REM Constant string with 25 spaces
131 COMMANDS$ = "NAVSRSLRSPHATORSHEDAMCOMXXX"

200 REM Arrays
201 DIM GALAXY(8,8)     : REM Array storing info about each quadrant
202 DIM DIRECTION(9,2)  : REM Direction vectors for navigation
203 DIM KLINGONS(3,3)   : REM Array storing Klingon data (x,y,strength)
204 DIM N(3)            : REM Temporary array for scanning
205 DIM SEEN(8,8)       : REM Array of visited quadrants
206 DIM DEVICE(8)       : REM Ship devices status array

300 REM Integer/Float variables
301 BASEX = 0           : REM X-coordinate of starbase
302 BASEY = 0           : REM Y-coordinate of starbase
303 TEMPX = 0           : REM Temporary X-coordinate
304 TEMPY = 0           : REM Temporary Y-coordinate
305 KLINGONCNT = 0      : REM Number of Klingons in current quadrant
306 BASECNT = 0         : REM Number of starbases in current quadrant 
307 STARCNT = 0         : REM Number of stars in current quadrant
308 BASENAMEONLY = 0    : REM Flag for showing only base name
309 Q4 = 0              : REM Previous quadrant X-coordinate
310 Q5 = 0              : REM Previous quadrant Y-coordinate
311 X1 = 0              : REM X-direction vector component
312 X2 = 0              : REM Y-direction vector component
313 X3 = 0              : REM Integer X-coordinate for torpedo track
314 Y3 = 0              : REM Integer Y-coordinate for torpedo track
315 X = 0               : REM Temporary X value for calculations
316 Y = 0               : REM Temporary Y value for calculations
317 C1 = 0              : REM Course input from player
318 S8 = 0              : REM Sector map index
319 J0 = 0              : REM Temporary value for tabulation
320 N = 0               : REM Energy units used in warp
321 D1 = 0              : REM Damage report flag
322 D6 = 0              : REM Warp factor for repair calculation
323 H = 0               : REM Hit points in combat
324 H1 = 0              : REM Phaser hit strength per Klingon
325 H8 = 0              : REM Flag for computer mode
326 I = 0               : REM Loop counter
327 J = 0               : REM Loop counter
328 L = 0               : REM Loop counter
329 R1 = 0              : REM Random or temporary value
330 R2 = 0              : REM Random coordinate Y
331 T8 = 0              : REM Time elapsed in warp
332 W1 = 0              : REM Warp factor input
333 X5 = 0              : REM Boundary crossing flag
334 REPAIRTIME = 0      : REM Time needed for repairs
335 REGIONX = 0         : REM Current region X coordinate
336 REGIONY = 0         : REM Current region Y coordinate
337 REPAIRFACTOR = 0    : REM Factor affecting repair time
338 INITDATE = 0        : REM Initial stardate (2000-4000) - Game start time
339 DATE = 0            : REM Current stardate - Used to track elapsed game time
340 TIMELIMIT = 0       : REM Mission time limit in stardates before game ends
341 ISDOCKED = 0        : REM Flag for docked status (1=docked at starbase, 0=not docked)
342 INITENERGY = 0      : REM Initial energy level - Starting energy for the ship
343 ENERGY = 0          : REM Current energy level - Used for movement and weapons
344 INITTORP = 0        : REM Initial torpedo count - Starting number of torpedoes
345 TORPEDOES = 0       : REM Current torpedo count - Available torpedoes for firing
346 MAXKLINGONSTR = 0   : REM Maximum Klingon strength - Upper limit for enemy health
347 SHIELD = 0          : REM Shield energy level - Protection against Klingon attacks
348 TOTALBASES = 0      : REM Total starbases in galaxy - For resupplying the ship
349 TOTALKLINGONS = 0   : REM Total Klingons in galaxy - Main mission objective
350 Z3 = 0              : REM Flag for object detection at coordinates (1=found, 0=not found)

400 REM String variables - Used for display and user interaction
401 A$ = ""             : REM Temporary string for object symbol (<E>, +K+, etc.)
402 NAME$ = ""          : REM Device or region name string - Used in reports
403 C$ = ""             : REM Ship condition (GREEN=safe, YELLOW=caution, RED=danger)
404 SECTORMAP$ = ""     : REM String containing sector map display (192 characters)
405 O1$ = ""            : REM Line output string - Used for formatting displays
406 X$ = ""             : REM Temporary string for plurals (adds "S" when needed)
407 X0$ = ""            : REM Temporary verb string (" IS " or " ARE ")

499 REM Function to calculate distance between Enterprise and a Klingon ship
499 DEF FND(D)=SQR((KLINGONS(I,KLINGX)-SECTX)^2+(KLINGONS(I,KLINGY)-SECTY)^2) : REM Distance function

500 REM Initialize game variables - Starting values for a new game
501 INITDATE=INT(RND(1)*20+20)*100  : REM Initial stardate (2000-4000)
502 DATE=INITDATE                   : REM Current stardate
503 TIMELIMIT=25+INT(RND(1)*10)     : REM Mission time limit
504 ISDOCKED=0                      : REM Flag for docked status
505 INITENERGY=3000                 : REM Initial energy level
506 ENERGY=INITENERGY               : REM Current energy level
507 INITTORP=10                     : REM Initial torpedo count
508 TORPEDOES=INITTORP              : REM Current torpedo count
509 MAXKLINGONSTR=200               : REM Maximum Klingon strength
510 SHIELD=0                        : REM Shield energy level
511 TOTALBASES=0                    : REM Total starbases in galaxy
512 TOTALKLINGONS=0                 : REM Total Klingons in galaxy
513 X$=""                           : REM Temporary string for plurals
514 X0$=" IS "                      : REM Temporary verb string

520 REM Initialize direction lookup vectors for course calculation
521 FOR I=1 TO 9
522     DIRECTION(I,XDIR)=0
523     DIRECTION(I,YDIR)=0
524  NEXT I
530 DIRECTION(3,XDIR)=-1
531 DIRECTION(2,XDIR)=-1
532 DIRECTION(4,XDIR)=-1
533 DIRECTION(4,YDIR)=-1
534 DIRECTION(5,YDIR)=-1
535 DIRECTION(6,YDIR)=-1
536 DIRECTION(1,YDIR)=1
537 DIRECTION(2,YDIR)=1
538 DIRECTION(6,XDIR)=1
539 DIRECTION(7,XDIR)=1
540 DIRECTION(8,XDIR)=1
541 DIRECTION(8,YDIR)=1
542 DIRECTION(9,YDIR)=1

550 REM Initialize device status
551 FOR I=1 TO 8
552     DEVICE(I)=0
553 NEXT I

800 REM Initialize galaxy - Creates the game universe with Klingons, starbases and stars
810 QUADX=INT(RND(1)*8+1)           : REM Starting quadrant X coordinate
811 QUADY=INT(RND(1)*8+1)           : REM Starting quadrant Y coordinate
812 SECTX=INT(RND(1)*8+1)           : REM Starting sector X coordinate
813 SECTY=INT(RND(1)*8+1)           : REM Starting sector Y coordinate

820 FOR I=1 TO 8
821    FOR J=1 TO 8
822       KLINGONCNT=0
823       SEEN(I,J)=0
824       R1=RND(1)
850       IF R1>.8 THEN KLINGONCNT=1
860       IF R1>.95 THEN KLINGONCNT=2
870       IF R1>.98 THEN KLINGONCNT=3
880       TOTALKLINGONS=TOTALKLINGONS+KLINGONCNT
980       BASECNT=0
981       IF RND(1)>.96 THEN BASECNT=1
982       TOTALBASES=TOTALBASES+BASECNT
1040      GALAXY(I,J)=KLINGONCNT*100+BASECNT*10+INT(RND(1)*8+1)
1041   NEXT J
1042 NEXT I

1043 IF TOTALKLINGONS>TIMELIMIT THEN TIMELIMIT=TOTALKLINGONS+1  : REM Ensure time limit is adequate

1100 REM Ensure at least one starbase exists in the galaxy
1100 IF TOTALBASES<>0 THEN GOTO 1200
1150 IF GALAXY(QUADX,QUADY)<200 THEN GALAXY(QUADX,QUADY)=GALAXY(QUADX,QUADY)+100:TOTALKLINGONS=TOTALKLINGONS+1
1160 TOTALBASES=1
1161 GALAXY(QUADX,QUADY)=GALAXY(QUADX,QUADY)+10
1162 QUADX=INT(RND(1)*8+1)
1163 QUADY=INT(RND(1)*8+1)

1200 INITKLINGONS=TOTALKLINGONS
1201 IF TOTALBASES<>1 THEN X$="S":X0$=" ARE "
1230 PRINT"YOUR ORDERS ARE AS FOLLOWS:"
1235 PRINT "--------------------------"
1240 PRINT"   DESTROY THE";TOTALKLINGONS;"KLINGON WARSHIPS WHICH HAVE INVADED"
1250 PRINT"   THE GALAXY BEFORE THEY CAN ATTACK FEDERATION HEADQUARTERS"
1260 PRINT"   ON STARDATE";INITDATE+TIMELIMIT;". THIS GIVES YOU";TIMELIMIT;"DAYS. THERE";X0$
1270 PRINT"  ";TOTALBASES;"STARBASE";X$;" IN THE GALAXY FOR RESUPPLYING YOUR SHIP."
1280 PRINT
1310 REM
1320 REGIONX=QUADX
1321 REGIONY=QUADY
1322 KLINGONCNT=0
1323 BASECNT=0
1324 STARCNT=0
1325 BASENAMEONLY=0
1326 REPAIRFACTOR=.5*RND(1)
1327 SEEN(REGIONX,REGIONY)=GALAXY(REGIONX,REGIONY)
1390 IF REGIONX<1 OR REGIONX>8 OR REGIONY<1 OR REGIONY>8 THEN GOTO 1600
1430 GOSUB 9030 : REM Get region name : REM Get star system name
1431 PRINT
1432 IF INITDATE<>DATE THEN GOTO 1490
1460 PRINT"YOUR MISSION BEGINS WITH YOUR STARSHIP LOCATED"
1470 PRINT"IN THE GALACTIC QUADRANT, '";NAME$;"'."
1471 GOTO 1500
1490 PRINT"NOW ENTERING ";NAME$;" QUADRANT . . ."
1500 PRINT
1501 KLINGONCNT=INT(GALAXY(REGIONX,REGIONY)*.01)
1502 BASECNT=INT(GALAXY(REGIONX,REGIONY)*.1)-10*KLINGONCNT
1540 STARCNT=GALAXY(REGIONX,REGIONY)-100*KLINGONCNT-10*BASECNT
1541 IF KLINGONCNT=0 THEN GOTO 1590
1560 PRINT TAB(3);"  COMBAT AREA      CONDITION RED  "
1561 IF SHIELD>200 THEN PRINT:GOTO 1590
1580 PRINT TAB(3);"      SHIELDS DANGEROUSLY LOW     "
1581 PRINT
1590 FOR I=1 TO 3
1591     KLINGONS(I,KLINGX)=0
1592     KLINGONS(I,KLINGY)=0
1593 NEXT I
1600 FOR I=1 TO 3
1601     KLINGONS(I,KLINGSTR)=0
1602 NEXT I
1603 SECTORMAP$=SPACE25$+SPACE25$+SPACE25$+SPACE25$+SPACE25$+SPACE25$+SPACE25$+LEFT$(SPACE25$,17)
1680 A$="<E>"
1681 TEMPX=SECTX
1682 TEMPY=SECTY
1683 GOSUB 8670 : REM Place object in map
1684 IF KLINGONCNT<1 THEN GOTO 1820

1720 FOR I=1 TO KLINGONCNT
1721     GOSUB 8590 : REM Get empty map location
1722     A$="+K+"
1723     TEMPX=R1
1724     TEMPY=R2
1780     GOSUB 8670 : REM Place object in map
1781     KLINGONS(I,KLINGX)=R1
1782     KLINGONS(I,KLINGY)=R2
1783     KLINGONS(I,KLINGSTR)=MAXKLINGONSTR*(.5+RND(1))
1784 NEXT I

1820 IF BASECNT<1 THEN GOTO 1910

1880 GOSUB 8590 : REM Get empty map location
1881 A$=">B<"
1882 TEMPX=R1
1883 BASEX=R1
1884 TEMPY=R2
1885 BASEY=R2
1886 GOSUB 8670 : REM Place object in map

1910 FOR I=1 TO STARCNT
1911     GOSUB 8590 : REM Get empty map location
1912     A$=" * "
1913     TEMPX=R1
1914     TEMPY=R2
1915     GOSUB 8670 : REM Place object in map
1916 NEXT I

1980 GOSUB 6430 : REM Check for nearby starbases

1987 REM ----------------------------------------
1988 REM  SRS - SHORT RANGE SENSOR SCAN
1989 REM ----------------------------------------

1990 IF SHIELD+ENERGY>10 THEN IF ENERGY>10 OR DEVICE(SHIELDS)=0 THEN GOTO 2060
2020 PRINT
2021 PRINT TAB(10);"** FATAL ERROR **"
2022 PRINT"YOU'VE JUST STRANDED YOUR SHIP IN SPACE."
2030 PRINT"YOU HAVE INSUFFICIENT MANEUVERING ENERGY,"
2040 PRINT"AND SHIELD CONTROL IS PRESENTLY INCAPABLE OF"
2050 PRINT"CROSS-CIRCUITING TO ENGINE ROOM!!"
2051 PRINT
2052 GOTO 6220

2057 REM ----------------------------------------
2058 REM  MAIN COMMANDS
2059 REM ----------------------------------------

2060 PRINT
2061 INPUT"COMMAND";A$
2062 PRINT
2080 FOR I=1 TO 9
2081     IF LEFT$(A$,3)<>MID$(COMMANDS$,3*I-2,3)THEN GOTO 2160
2140     IF I=1 THEN GOTO 2300
2141     IF I=2 THEN GOTO 1980
2142     IF I=3 THEN GOTO 4000
2143     IF I=4 THEN GOTO 4260
2144     IF I=5 THEN GOTO 4700
2145     IF I=6 THEN GOTO 5530
2146     IF I=7 THEN GOTO 5690
2147     IF I=8 THEN GOTO 7290
2148     IF I=9 THEN GOTO 6270
2160 NEXT I
2161 PRINT"ENTER ONE OF THE FOLLOWING:"
2170 PRINT "--------------------------"
2180 PRINT"  NAV  (TO SET COURSE)"
2190 PRINT"  SRS  (FOR SHORT RANGE SENSOR SCAN)"
2200 PRINT"  LRS  (FOR LONG RANGE SENSOR SCAN)"
2210 PRINT"  PHA  (TO FIRE PHASERS)"
2220 PRINT"  TOR  (TO FIRE PHOTON TORPEDOES)"
2230 PRINT"  SHE  (TO RAISE OR LOWER SHIELDS)"
2240 PRINT"  DAM  (FOR DAMAGE CONTROL REPORTS)"
2250 PRINT"  COM  (TO CALL ON LIBRARY-COMPUTER)"
2260 PRINT"  XXX  (TO RESIGN YOUR COMMAND)":PRINT
2261 GOTO 1990 : REM Main Loop

2257 REM ----------------------------------------
2258 REM  NAV - NAVIGATION COMMAND
2259 REM ----------------------------------------

2300 INPUT"COURSE (0-9)";C1
2301 IF C1=9 THEN C1=1
2310 IF C1>=1 AND C1<9 THEN GOTO 2350
2330 PRINT"   LT. SULU: 'INCORRECT COURSE DATA, SIR!'"
2331 GOTO 1990 : REM Main Loop
2350 X$="8"
2351 IF DEVICE(WARPENGINES)<0 THEN X$="0.2"
2360 PRINT"WARP FACTOR (0-";X$;")";
2361 INPUT W1
2362 PRINT
2363 IF DEVICE(WARPENGINES)<0 AND W1>.2 THEN GOTO 2470
2380 IF W1>0 AND W1<=8 THEN GOTO 2490
2390 IF W1=0 THEN GOTO 1990 : REM Main Loop
2420 PRINT"   CHIEF ENGINEER SCOTT: 'THE ENGINES WON'T TAKE";
2430 PRINT" WARP";W1;"!'"
2431 GOTO 1990 : REM Main Loop
2470 PRINT"WARP ENGINES ARE DAMAGED.  MAXIUM SPEED = WARP 0.2"
2471 GOTO 1990 : REM Main Loop
2490 N=INT(W1*8+.5)
2491 IF ENERGY-N>=0 THEN GOTO 2590
2500 PRINT"ENGINEERING: 'INSUFFICIENT ENERGY AVAILABLE"
2510 PRINT"               FOR MANEUVERING AT WARP";W1;"!'"
2530 IF SHIELD<N-ENERGY OR DEVICE(SHIELDS)<0 THEN GOTO 1990 : REM Main Loop
2550 PRINT"DEFLECTOR CONTROL ROOM:  ";SHIELD;"UNITS OF ENERGY"
2560 PRINT"                          PRESENTLY DEPLOYED TO SHIELDS."
2570 GOTO 1990 : REM Main Loop

2590 FOR I=1 TO KLINGONCNT
2591     IF KLINGONS(I,KLINGSTR)=0 THEN GOTO 2700
2610     A$="   "
2611     TEMPX=KLINGONS(I,KLINGX)
2612     TEMPY=KLINGONS(I,KLINGY)
2613     GOSUB 8670 : REM Place object in map
2614     GOSUB 8590 : REM Get empty map location
2660     KLINGONS(I,KLINGX)=TEMPX
2661     KLINGONS(I,KLINGY)=TEMPY
2662     A$="+K+"
2663     GOSUB 8670 : REM Place object in map
2700 NEXT I
2701 GOSUB 6000 : REM Klingon attack
2702 D1=0
2703 D6=W1
2704 IF W1>=1 THEN D6=1

2770 FOR I=1 TO 8
2771     IF DEVICE(I)>=0 THEN GOTO 2880
2790     DEVICE(I)=DEVICE(I)+D6
2791     IF DEVICE(I)>-.1 AND DEVICE(I)<0 THEN DEVICE(I)=-.1:GOTO 2880
2800     IF DEVICE(I)<0 THEN GOTO 2880
2810     IF D1<>1 THEN D1=1:PRINT"DAMAGE CONTROL REPORT:  ";
2840     PRINT TAB(8);
2841     R1=I
2842     GOSUB 8790 : REM Get device name
2843     PRINT NAME$;" REPAIR COMPLETED."
2880 NEXT I

2881 IF RND(1)>.2 THEN GOTO 3070
2910 R1=INT(RND(1)*8+1)
2911 IF RND(1)>=.6 THEN GOTO 3000
2930 DEVICE(R1)=DEVICE(R1)-(RND(1)*5+1)
2931 PRINT"DAMAGE CONTROL REPORT: ";
2960 GOSUB 8790 : REM Get device name
2961 PRINT NAME$;" DAMAGED"
2962 PRINT
2963 GOTO 3070
3000 DEVICE(R1)=DEVICE(R1)+RND(1)*3+1
3001 PRINT"DAMAGE CONTROL REPORT:  ";
3030 GOSUB 8790 : REM Get device name
3031 PRINT NAME$;" STATE OF REPAIR IMPROVED"
3032 PRINT
3070 A$="   "
3071 TEMPX=INT(SECTX)
3072 TEMPY=INT(SECTY)
3073 GOSUB 8670 : REM Place object in map
3110 X1=DIRECTION(C1,XDIR)+(DIRECTION(C1+1,XDIR)-DIRECTION(C1,XDIR))*(C1-INT(C1))
3111 X=SECTX
3112 Y=SECTY
3140 X2=DIRECTION(C1,YDIR)+(DIRECTION(C1+1,YDIR)-DIRECTION(C1,YDIR))*(C1-INT(C1))
3141 Q4=QUADX
3142 Q5=QUADY

3170 FOR I=1 TO N
3171     SECTX=SECTX+X1
3172     SECTY=SECTY+X2
3173     IF SECTX<1 OR SECTX>=9 OR SECTY<1 OR SECTY>=9 THEN GOTO 3500
3240     S8=INT(SECTX)*24+INT(SECTY)*3-26
3241     IF MID$(SECTORMAP$,S8,2)="  "THEN GOTO 3360
3320     SECTX=INT(SECTX-X1)
3321     SECTY=INT(SECTY-X2)
3322     PRINT"WARP ENGINES SHUT DOWN AT ";
3350     PRINT"SECTOR";SECTX;;",";SECTY;"DUE TO BAD NAVAGATION"
3351     GOTO 3370
3360 NEXT I

3361 SECTX=INT(SECTX)
3362 SECTY=INT(SECTY)
3370 A$="<E>"
3371 TEMPX=INT(SECTX)
3372 TEMPY=INT(SECTY)
3373 GOSUB 8670 : REM Place object in map
3374 GOSUB 3910 : REM Energy consumption calc
3375 T8=1
3430 IF W1<1 THEN T8=.1*INT(10*W1)
3450 DATE=DATE+T8
3451 IF DATE>INITDATE+TIMELIMIT THEN GOTO 6220
3480 GOTO 1980
3500 X=8*QUADX+X+N*X1
3501 Y=8*QUADY+Y+N*X2
3502 QUADX=INT(X/8)
3503 QUADY=INT(Y/8)
3504 SECTX=INT(X-QUADX*8)
3550 SECTY=INT(Y-QUADY*8)
3551 IF SECTX=0 THEN QUADX=QUADX-1:SECTX=8
3590 IF SECTY=0 THEN QUADY=QUADY-1:SECTY=8
3620 X5=0
3621 IF QUADX<1 THEN X5=1:QUADX=1:SECTX=1
3670 IF QUADX>8 THEN X5=1:QUADX=8:SECTX=8
3710 IF QUADY<1 THEN X5=1:QUADY=1:SECTY=1
3750 IF QUADY>8 THEN X5=1:QUADY=8:SECTY=8
3790 IF X5=0 THEN GOTO 3860
3800 PRINT"LT. UHURA: MESSAGE FROM STARFLEET COMMAND --"
3810 PRINT"  'PERMISSION TO ATTEMPT CROSSING OF GALACTIC PERIMETER"
3820 PRINT"  IS HEREBY *DENIED*.  SHUT DOWN YOUR ENGINES.'"
3830 PRINT"CHIEF ENGINEER SCOTT:  'WARP ENGINES SHUT DOWN"
3840 PRINT"  AT SECTOR";SECTX;",";SECTY;"OF QUADRANT";QUADX;",";QUADY;".'"
3850 IF DATE>INITDATE+TIMELIMIT THEN GOTO 6220
3860 IF 8*QUADX+QUADY=8*Q4+Q5 THEN GOTO 3370
3870 DATE=DATE+1
3871 GOSUB 3910 : REM Energy consumption calc
3872 GOTO 1320

3909 REM Energy consumption calculations - Updates energy and shield values after movement
3910 ENERGY=ENERGY-N-10
3911 IF ENERGY>=0 THEN RETURN
3930 PRINT"SHIELD CONTROL SUPPLIES ENERGY TO COMPLETE THE MANEUVER."
3940 SHIELD=SHIELD+ENERGY
3941 ENERGY=0
3942 IF SHIELD<=0 THEN SHIELD=0
3980 RETURN

3997 REM ----------------------------------------
3998 REM  LRS - LONG RANGE SENSOR SCAN
3999 REM ----------------------------------------

4000 IF DEVICE(LRSSENSOR)<0 THEN PRINT"LONG RANGE SENSORS ARE INOPERABLE.":GOTO 1990 : REM Main Loop
4030 PRINT"LONG RANGE SCAN FOR QUADRANT";QUADX;",";QUADY
4031 PRINT
4040 O1$="-------------------"
4041 PRINT O1$

4060 FOR I=QUADX-1 TO QUADX+1
4061     N(1)=-1
4062     N(2)=-2
4063     N(3)=-3
4064     FOR J=QUADY-1 TO QUADY+1
4120         IF I>0 AND I<9 AND J>0 AND J<9 THEN N(J-QUADY+2)=GALAXY(I,J):SEEN(I,J)=GALAXY(I,J)
4180     NEXT J
4181     FOR L=1 TO 3
4182         PRINT"| ";
4183         IF N(L)<0 THEN PRINT"*** ";:GOTO 4230
4210         PRINT RIGHT$(STR$(N(L)+1000),3);" ";
4230     NEXT L
4231     PRINT"|"
4232     PRINT O1$
4233 NEXT I
4234 GOTO 1990 : REM Main Loop

4257 REM ----------------------------------------
4258 REM  PHA - FIRE PHASERS
4259 REM ----------------------------------------

4260 IF DEVICE(PHASERS)<0 THEN PRINT"PHASERS INOPERATIVE.":GOTO 1990 : REM Main Loop
4265 IF KLINGONCNT>0 THEN GOTO 4330
4270 PRINT"SCIENCE OFFICER SPOCK:  'SENSORS SHOW NO ENEMY SHIPS"
4280 PRINT"                         IN THIS QUADRANT'"
4281 GOTO 1990 : REM Main Loop
4330 IF DEVICE(COMPUTER)<0 THEN PRINT"COMPUTER FAILURE HAMPERS ACCURACY."
4350 PRINT"PHASERS LOCKED ON TARGET;  "
4360 PRINT"ENERGY AVAILABLE =";ENERGY;"UNITS"
4370 INPUT"NUMBER OF UNITS TO FIRE";X
4371 IF X<=0 THEN GOTO 1990 : REM Main Loop
4400 IF ENERGY-X<0 THEN GOTO 4360
4410 ENERGY=ENERGY-X
4411 IF DEVICE(SHIELDS)<0 THEN X=X*RND(1)
4450 H1=INT(X/KLINGONCNT)

4451 FOR I=1 TO 3
4452     IF KLINGONS(I,KLINGSTR)<=0 THEN GOTO 4670
4480     H=INT((H1/FND(0))*(RND(1)+2))
4481     IF H>.15*KLINGONS(I,KLINGSTR)THEN GOTO 4530
4500     PRINT"SENSORS SHOW NO DAMAGE TO ENEMY AT";KLINGONS(I,KLINGX);",";KLINGONS(I,KLINGY);"."
4501     GOTO 4670
4530     KLINGONS(I,KLINGSTR)=KLINGONS(I,KLINGSTR)-H
4531     PRINT H;"UNIT HIT ON KLINGON AT SECTOR";KLINGONS(I,KLINGX);",";
4550     PRINT KLINGONS(I,KLINGY);"."
4551     IF KLINGONS(I,KLINGSTR)<=0 THEN PRINT:PRINT "*** KLINGON DESTROYED ***":PRINT:GOTO 4580
4560     PRINT" (SENSORS SHOW";KLINGONS(I,KLINGSTR);"UNITS REMAINING)"
4580     KLINGONCNT=KLINGONCNT-1
4581     TOTALKLINGONS=TOTALKLINGONS-1
4582     TEMPX=KLINGONS(I,KLINGX)
4583     TEMPY=KLINGONS(I,KLINGY)
4584     A$="   "
4585     GOSUB 8670 : REM Place object in map
4650     KLINGONS(I,KLINGSTR)=0
4651     GALAXY(REGIONX,REGIONY)=GALAXY(REGIONX,REGIONY)-100
4652     SEEN(REGIONX,REGIONY)=GALAXY(REGIONX,REGIONY)
4653     IF TOTALKLINGONS<=0 THEN GOTO 6370
4670 NEXT I

4671 GOSUB 6000 : REM Klingon attack
4672 GOTO 1990 : REM Main Loop

4697 REM ----------------------------------------
4698 REM  TOR - FIRE PHOTON TORPEDOES
4699 REM ----------------------------------------

4700 IF TORPEDOES<=0 THEN PRINT"ALL PHOTON TORPEDOES EXPENDED.":GOTO 1990 : REM Main Loop
4730 IF DEVICE(PHOTONTORPEDO)<0 THEN PRINT"PHOTON TUBES ARE NOT OPERATIONAL.":GOTO 1990 : REM Main Loop
4760 INPUT"PHOTON TORPEDO COURSE (1-9)";C1
4761 IF C1=9 THEN C1=1
4780 IF C1>=1 AND C1<9 THEN GOTO 4850
4790 PRINT"ENSIGN CHEKOV:  'INCORRECT COURSE DATA, SIR!'"
4800 GOTO 1990 : REM Main Loop
4850 X1=DIRECTION(C1,XDIR)+(DIRECTION(C1+1,XDIR)-DIRECTION(C1,XDIR))*(C1-INT(C1))
4851 ENERGY=ENERGY-2
4852 TORPEDOES=TORPEDOES-1
4860 X2=DIRECTION(C1,YDIR)+(DIRECTION(C1+1,YDIR)-DIRECTION(C1,YDIR))*(C1-INT(C1))
4861 X=SECTX
4862 Y=SECTY
4910 PRINT"TORPEDO TRACK:"
4920 X=X+X1
4921 Y=Y+X2
4922 X3=INT(X+.5)
4923 Y3=INT(Y+.5)
4960 IF X3<1 OR X3>8 OR Y3<1 OR Y3>8 THEN GOTO 5490
5000 PRINT"               ";X3;",";Y3
5001 A$="   "
5002 TEMPX=X
5003 TEMPY=Y
5004 GOSUB 8830 : REM Check for object in map
5050 IF Z3<>0 THEN GOTO 4920
5060 A$="+K+"
5061 TEMPX=X
5062 TEMPY=Y
5063 GOSUB 8830 : REM Check for object in map
5064 IF Z3=0 THEN GOTO 5210
5110 PRINT
5111 PRINT "*** KLINGON DESTROYED ***"
5112 PRINT
5113 KLINGONCNT=KLINGONCNT-1
5114 TOTALKLINGONS=TOTALKLINGONS-1
5115 IF TOTALKLINGONS<=0 THEN GOTO 6370
5150 FOR I=1 TO 3
5151     IF X3=KLINGONS(I,KLINGX)AND Y3=KLINGONS(I,KLINGY)THEN GOTO 5190
5180 NEXT I
5181 I=3
5190 KLINGONS(I,KLINGSTR)=0
5191 GOTO 5430
5210 A$=" * "
5211 TEMPX=X
5212 TEMPY=Y
5213 GOSUB 8830 : REM Check for object in map
5214 IF Z3=0 THEN GOTO 5280
5260 PRINT"STAR AT";X3;",";Y3;"ABSORBED TORPEDO ENERGY."
5261 GOSUB 6000 : REM Klingon attack
5262 GOTO 1990 : REM Main Loop
5280 A$=">B<"
5281 TEMPX=X
5282 TEMPY=Y
5283 GOSUB 8830 : REM Check for object in map
5284 IF Z3=0 THEN GOTO 4760 REM Use ">B<" to match placed base symbol
5330 PRINT "*** STARBASE DESTROYED ***"
5331 BASECNT=BASECNT-1
5332 TOTALBASES=TOTALBASES-1
5360 IF TOTALBASES>0 OR TOTALKLINGONS>DATE-INITDATE-TIMELIMIT THEN GOTO 5400
5370 PRINT"THAT DOES IT, CAPTAIN!!  YOU ARE HEREBY RELIEVED OF COMMAND"
5380 PRINT"AND SENTENCED TO 99 STARDATES AT HARD LABOR ON CYGNUS 12!!"
5390 GOTO 6270
5400 PRINT"STARFLEET COMMAND REVIEWING YOUR RECORD TO CONSIDER"
5410 PRINT"COURT MARTIAL!"
5411 ISDOCKED=0
5430 TEMPX=X
5431 TEMPY=Y
5432 A$="   "
5433 GOSUB 8670 : REM Place object in map
5470 GALAXY(REGIONX,REGIONY)=KLINGONCNT*100+BASECNT*10+STARCNT
5471 SEEN(REGIONX,REGIONY)=GALAXY(REGIONX,REGIONY)
5472 GOSUB 6000 : REM Klingon attack
5473 GOTO 1990 : REM Main Loop
5490 PRINT"TORPEDO MISSED."
5491 PRINT
5492 GOSUB 6000 : REM Klingon attack
5493 GOTO 1990 : REM Main Loop

5527 REM ----------------------------------------
5528 REM  SHE - SHIELDS CONTROL
5529 REM ----------------------------------------

5530 IF DEVICE(SHIELDS)<0 THEN PRINT"SHIELD CONTROL INOPERABLE.":GOTO 1990 : REM Main Loop
5560 PRINT"ENERGY AVAILABLE =";ENERGY+SHIELD;
5561 INPUT"NUMBER OF UNITS TO SHIELDS";X
5580 IF X<0 OR SHIELD=X THEN PRINT"<SHIELDS UNCHANGED>":GOTO 1990 : REM Main Loop
5590 IF X<=ENERGY+SHIELD THEN GOTO 5630
5600 PRINT"SHIELD CONTROL:  'THIS IS NOT THE FEDERATION TREASURY.'" 
5610 PRINT"<SHIELDS UNCHANGED>"
5611 GOTO 1990 : REM Main Loop
5630 ENERGY=ENERGY+SHIELD-X
5631 SHIELD=X
5632 PRINT"DEFLECTOR CONTROL ROOM:"
5660 PRINT"  'SHIELDS NOW AT";INT(SHIELD);"UNITS PER YOUR COMMAND.'"
5661 GOTO 1990 : REM Main Loop

5687 REM ----------------------------------------
5688 REM  DAM - DAMAGE CONTROL REPORT
5689 REM ----------------------------------------

5690 IF DEVICE(DAMAGECONTROL)>=0 THEN GOTO 5910
5700 PRINT"DAMAGE CONTROL REPORT NOT AVAILABLE."
5701 IF ISDOCKED=0 THEN GOTO 1990 : REM Main Loop
5720 REPAIRTIME=0
5721 FOR I=1 TO 8
5722     IF DEVICE(I)<0 THEN REPAIRTIME=REPAIRTIME+.1
5760 NEXT I
5761 IF REPAIRTIME=0 THEN GOTO 1990 : REM Main Loop
5780 PRINT
5781 REPAIRTIME=REPAIRTIME+REPAIRFACTOR
5782 IF REPAIRTIME>=1 THEN REPAIRTIME=.9
5810 PRINT"TECHNICIANS STANDING BY TO EFFECT REPAIRS TO YOUR SHIP;"
5820 PRINT"ESTIMATED TIME TO REPAIR:";.01*INT(100*REPAIRTIME);"STARDATES."
5840 INPUT"WILL YOU AUTHORIZE THE REPAIR ORDER (Y/N)";A$
5860 IF A$<>"Y"THEN GOTO 1990 : REM Main Loop
5870 FOR I=1 TO 8
5871     IF DEVICE(I)<0 THEN DEVICE(I)=0
5890 NEXT I
5891 DATE=DATE+REPAIRTIME+.1
5910 PRINT
5911 PRINT"DEVICE             STATE OF REPAIR"
5912 PRINT"------             ---------------"
5913 FOR I=1 TO 8
5920     R1=I  ' Set R1 for device name lookup
5921     GOSUB 8790 : REM Get device name
5922     PRINT NAME$;LEFT$(SPACE25$,25-LEN(NAME$));INT(DEVICE(I)*100)*.01
5950 NEXT I
5951 PRINT
5952 IF ISDOCKED<>0 THEN GOTO 5720
5980 GOTO 1990 : REM Main Loop

5999 REM Klingon attack routine - Handles enemy combat actions against Enterprise
6000 IF KLINGONCNT<=0 THEN RETURN
6010 IF ISDOCKED<>0 THEN PRINT"STARBASE SHIELDS PROTECT THE ENTERPRISE.":RETURN
6040 FOR I=1 TO 3
6041     IF KLINGONS(I,KLINGSTR)<=0 THEN GOTO 6200
6060     H=INT((KLINGONS(I,KLINGSTR)/FND(1))*(2+RND(1)))
6061     SHIELD=SHIELD-H
6062     KLINGONS(I,KLINGSTR)=KLINGONS(I,KLINGSTR)/(3+RND(0))
6080     PRINT
6081     PRINT H;"UNIT HIT ON ENTERPRISE FROM SECTOR";KLINGONS(I,KLINGX);",";KLINGONS(I,KLINGY);"."
6090     IF SHIELD<=0 THEN GOTO 6240
6100     PRINT"      <SHIELDS DOWN TO";SHIELD;"UNITS>"
6101     IF H<20 THEN GOTO 6200
6120     IF RND(1)>.6 OR H/SHIELD<=.02 THEN GOTO 6200
6140     R1=INT(RND(1)*8+1)
6141     DEVICE(R1)=DEVICE(R1)-H/SHIELD-.5*RND(1)
6142     GOSUB 8790 : REM Get device name
6170     PRINT"DAMAGE CONTROL: '";NAME$;" DAMAGED BY THE HIT'"
6200 NEXT I
6201 RETURN
6220 PRINT
6221 PRINT"IT IS STARDATE";DATE;"."
6222 PRINT
6223 GOTO 6270

6240 PRINT
6241 PRINT"THE ENTERPRISE HAS BEEN DESTROYED.  THE FEDERATION ";
6250 PRINT"WILL BE CONQUERED."
6251 GOTO 6220

6267 REM ----------------------------------------
6268 REM  XXX - RESIGN COMMAND
6269 REM ----------------------------------------

6270 PRINT"THERE WERE";TOTALKLINGONS;"KLINGON BATTLE CRUISERS LEFT AT"
6280 PRINT"THE END OF YOUR MISSION."
6290 PRINT
6291 PRINT
6292 IF TOTALBASES=0 THEN GOTO 6360
6310 REM
6320 REM
6330 REM
6331 REM
6360 END
6370 PRINT"CONGRATULATIONS, CAPTAIN!  THE LAST KLINGON BATTLE CRUISER"
6380 PRINT"MENACING THE FEDERATION HAS BEEN DESTROYED."
6381 PRINT
6400 PRINT"YOUR EFFICIENCY RATING IS";1000*(INITKLINGONS/(DATE-INITDATE))^2
6401 GOTO 6290

6429 REM Check for nearby starbases and update status
6430 FOR I=SECTX-1 TO SECTX+1
6431     FOR J=SECTY-1 TO SECTY+1
6450         IF INT(I+.5)<1 OR INT(I+.5)>8 OR INT(J+.5)<1 OR INT(J+.5)>8 THEN GOTO 6540
6490         A$=">B<"
6491         TEMPX=I
6492         TEMPY=J
6493 GOSUB 8830 : REM Check for object in map
6540     NEXT J
6541 NEXT I
6542 ISDOCKED=0
6543 GOTO 6650
6580 ISDOCKED=1
6581 C$="DOCKED"
6582 ENERGY=INITENERGY
6583 TORPEDOES=INITTORP
6620 PRINT"SHIELDS DROPPED FOR DOCKING PURPOSES."
6621 SHIELD=0
6622 GOTO 6720
6650 IF KLINGONCNT>0 THEN C$="*RED*":GOTO 6720
6660 C$="GREEN"
6661 IF ENERGY<INITENERGY*.1 THEN C$="YELLOW"
6720 IF DEVICE(SRSSENSOR)>=0 THEN GOTO 6770
6730 PRINT
6731 PRINT"*** SHORT RANGE SENSORS ARE OUT ***"
6732 PRINT
6733 RETURN
6770 O1$="   +--1---2---3---4---5---6---7---8-+"
6771 PRINT O1$
6772 FOR I=1 TO 8
6773 PRINT I;"|";
6820 FOR J=(I-1)*24+1 TO(I-1)*24+22 STEP 3
6821     PRINT" ";MID$(SECTORMAP$,J,3);
6822 NEXT J
6823 PRINT"|";I;
6830 IF I=1 THEN GOTO 6850
6831 IF I=2 THEN GOTO 6900
6832 IF I=3 THEN GOTO 6960
6833 IF I=4 THEN GOTO 7020
6834 IF I=5 THEN GOTO 7070
6835 IF I=6 THEN GOTO 7120
6836 IF I=7 THEN GOTO 7180
6837 IF I=8 THEN GOTO 7240
6850 PRINT"        STARDATE           ";INT(DATE*10)*.1
6852 GOTO 7260
6900 PRINT"        CONDITION          ";C$
6902 GOTO 7260
6960 PRINT"        QUADRANT           ";QUADX;",";QUADY
6961 GOTO 7260
7020 PRINT"        SECTOR             ";SECTX;",";SECTY
7021 GOTO 7260
7070 PRINT"        PHOTON TORPEDOES   ";INT(TORPEDOES)
7072 GOTO 7260
7120 PRINT"        TOTAL ENERGY       ";INT(ENERGY+SHIELD)
7122 GOTO 7260
7180 PRINT"        SHIELDS            ";INT(SHIELD)
7182 GOTO 7260
7240 PRINT"        KLINGONS REMAINING";INT(TOTALKLINGONS)
7260 NEXT I
7261 PRINT O1$
7262 RETURN

7287 REM ----------------------------------------
7288 REM  COM - LIBRARY-COMPUTER
7289 REM ----------------------------------------

7290 IF DEVICE(COMPUTER)<0 THEN PRINT"COMPUTER DISABLED.":GOTO 1990 : REM Main Loop
7320 INPUT"COMPUTER ACTIVE AND AWAITING COMMAND";A
7321 IF A<0 THEN GOTO 1990 : REM Main Loop
7350 PRINT
7351 H8=1
7352 IF A+1=1 THEN GOTO 7540
7353 IF A+1=2 THEN GOTO 7900
7354 IF A+1=3 THEN GOTO 8070
7355 IF A+1=4 THEN GOTO 8500
7356 IF A+1=5 THEN GOTO 8150
7357 IF A+1=6 THEN GOTO 7400
7360 PRINT"FUNCTIONS AVAILABLE FROM LIBRARY-COMPUTER:"
7365 PRINT "-----------------------------------------"
7366 PRINT
7370 PRINT"   0 = CUMULATIVE GALTIC RECORD"
7372 PRINT"   1 = STATUS REPORT"
7374 PRINT"   2 = PHOTON TORPEDO DATA"
7376 PRINT"   3 = STARBASE NAV DATA"
7378 PRINT"   4 = DIRECTION/DISTANCE CALCULATOR"
7380 PRINT"   5 = GALAXY 'REGION NAME' MAP"
7381 PRINT
7382 GOTO 7320

7397 REM ----------------------------------------
7398 REM  5 - GALAXY REGION NAME MAP
7399 REM ----------------------------------------

7400 H8=0
7401 BASENAMEONLY=1
7402 PRINT"                        THE GALAXY"

7537 REM '----------------------------------------
7538 REM ' 0 - CUMULATIVE GALACTIC RECORD
7539 REM '----------------------------------------

7540 REM
7542 REM
7543 PRINT
7544 PRINT"       ";
7545 PRINT"COMPUTER RECORD OF GALAXY FOR QUADRANT";QUADX;",";QUADY
7546 PRINT
7550 PRINT"       1     2     3     4     5     6     7     8"
7560 O1$="    +-----+-----+-----+-----+-----+-----+-----+-----+"
7570 PRINT O1$
7571 FOR I=1 TO 8
7572     PRINT I;" ";
7573     IF H8=0 THEN GOTO 7740
7630     FOR J=1 TO 8
7631         PRINT"| ";
7632         IF SEEN(I,J)=0 THEN PRINT"*** ";:GOTO 7720
7700         PRINT RIGHT$(STR$(SEEN(I,J)+1000),3);" ";
7720         IF J=8 THEN PRINT "|"
7721     NEXT J
7722     GOTO 7850
7740     REGIONX=I
7741     REGIONY=1
7742     GOSUB 9030 : REM Get region name
7743     J0=INT(15-.5*LEN(NAME$))
7744     PRINT TAB(J0);NAME$;
7800     REGIONY=5
7801     GOSUB 9030 : REM Get region name
7802     J0=INT(39-.5*LEN(NAME$))
7803     PRINT TAB(J0);NAME$
7850     PRINT O1$
7851 NEXT I
7852 PRINT
7853 GOTO 1990 : REM Main Loop

7897 REM ----------------------------------------
7898 REM  1 - STATUS REPORT
7899 REM ----------------------------------------

7900 PRINT "   STATUS REPORT:"
7901 PRINT "   -------------"
7902 X$=""
7903 IF TOTALKLINGONS>1 THEN X$="S"
7940 PRINT TOTALKLINGONS;"KLINGON";X$;" LEFT."
7960 PRINT" MISSION MUST BE COMPLETED IN";.1*INT((INITDATE+TIMELIMIT-DATE)*10);"STARDATES."
7970 X$="S"
7971 IF TOTALBASES<2 THEN X$="":IF TOTALBASES<1 THEN GOTO 8010
7980 PRINT" THE FEDERATION IS MAINTAINING";TOTALBASES;"STARBASE";X$;" IN THE GALAXY."
7990 GOTO 5690
8010 PRINT"YOUR STUPIDITY HAS LEFT YOU ON YOUR OWN IN"
8020 PRINT"  THE GALAXY -- YOU HAVE NO STARBASES LEFT!"
8021 GOTO 5690

8067 REM ----------------------------------------
8068 REM  2 - PHOTON TORPEDO DATA
8069 REM ----------------------------------------

8070 IF KLINGONCNT<=0 THEN GOTO 4270
8080 X$=""
8081 IF KLINGONCNT>1 THEN X$="S"
8090 PRINT"FROM ENTERPRISE TO KLINGON BATTLE CRUSER";X$
8100 H8=0
8101 FOR I=1 TO 3
8102     IF KLINGONS(I,KLINGSTR)<=0 THEN GOTO 8480
8110     W1=KLINGONS(I,KLINGX)
8111     X=KLINGONS(I,KLINGY)
8120     C1=SECTX
8121     A=SECTY
8122     GOTO 8220

8147 REM ----------------------------------------
8148 REM  4 - DIRECTION/DISTANCE CALCULATOR
8149 REM ----------------------------------------

8150     PRINT"DIRECTION/DISTANCE CALCULATOR:"
8160     PRINT"YOU ARE AT QUADRANT ";QUADX;",";QUADY;" SECTOR ";SECTX;",";SECTY;"."
8170     INPUT"PLEASE ENTER INITIAL COORDINATES (X,Y)";C1,A
8200     INPUT"FINAL COORDINATES (X,Y)";W1,X
8220     X=X-A
8221     A=C1-W1
8222     IF X<0 THEN GOTO 8350
8250     IF A<0 THEN GOTO 8410
8260     IF X>0 THEN GOTO 8280
8270     IF A=0 THEN C1=5:GOTO 8290
8280     C1=1
8290     IF ABS(A)<=ABS(X)THEN GOTO 8330
8310     PRINT"DIRECTION =";C1+(((ABS(A)-ABS(X))+ABS(A))/ABS(A))
8311     GOTO 8460
8330     PRINT"DIRECTION =";C1+(ABS(A)/ABS(X))
8331     GOTO 8460
8350     IF A>0 THEN C1=3:GOTO 8420
8360     IF X<>0 THEN C1=5:GOTO 8290
8410     C1=7
8420     IF ABS(A)>=ABS(X)THEN GOTO 8450
8430     PRINT"DIRECTION =";C1+(((ABS(X)-ABS(A))+ABS(X))/ABS(X))
8431     GOTO 8460
8450     PRINT"DIRECTION =";C1+(ABS(X)/ABS(A))
8460     PRINT"DISTANCE =";SQR(X^2+A^2)
8461     IF H8=1 THEN GOTO 1990 : REM Main Loop
8480 NEXT I
8481 GOTO 1990 : REM Main Loop

8497 REM ----------------------------------------
8498 REM  3 - STARBASE NAV DATA
8499 REM ----------------------------------------

8500 IF BASECNT<>0 THEN PRINT"FROM ENTERPRISE TO STARBASE:":W1=BASEX:X=BASEY:GOTO 8120
8510 PRINT"MR. SPOCK:  'SENSORS SHOW NO STARBASES IN THIS QUADRANT.'";
8520 GOTO 1990 : REM Main Loop

8589 REM Find random empty sector coordinates for placing objects on the map
8590 R1=INT(RND(1)*8+1)
8591 R2=INT(RND(1)*8+1)
8592 A$="   "
8593 TEMPX=R1
8594 TEMPY=R2
8595 GOSUB 8830 : REM Check for object in map
8596 IF Z3=0 THEN GOTO 8590
8600 RETURN
8669 REM Place object on map at coordinates by modifying the SECTORMAP$ string
8670 S8=INT(TEMPY-.5)*3+INT(TEMPX-.5)*24+1
8675 IF LEN(A$)<>3 THEN PRINT"ERROR":STOP
8680 IF S8=1 THEN SECTORMAP$=A$+RIGHT$(SECTORMAP$,189):RETURN
8690 IF S8=190 THEN SECTORMAP$=LEFT$(SECTORMAP$,189)+A$:RETURN
8700 SECTORMAP$=LEFT$(SECTORMAP$,S8-1)+A$+RIGHT$(SECTORMAP$,190-S8)
8701 RETURN

8789 REM Get device name by index in R1 - Used for damage reports and repairs
8790 IF R1=1 THEN GOTO 8800
8791 IF R1=2 THEN GOTO 8802
8792 IF R1=3 THEN GOTO 8804
8793 IF R1=4 THEN GOTO 8806
8794 IF R1=5 THEN GOTO 8808
8795 IF R1=6 THEN GOTO 8810
8796 IF R1=7 THEN GOTO 8812
8797 IF R1=8 THEN GOTO 8814
8800 NAME$="WARP ENGINES"
8801 RETURN
8802 NAME$="SHORT RANGE SENSORS"
8803 RETURN
8804 NAME$="LONG RANGE SENSORS"
8805 RETURN
8806 NAME$="PHASER CONTROL"
8807 RETURN
8808 NAME$="PHOTON TUBES"
8809 RETURN
8810 NAME$="DAMAGE CONTROL"
8811 RETURN
8812 NAME$="SHIELD CONTROL"
8813 RETURN
8814 NAME$="LIBRARY-COMPUTER"
8815 RETURN

8829 REM Check for object at specific coordinates - Returns Z3=1 if matching object found
8830 TEMPX=INT(TEMPX+.5)
8831 TEMPY=INT(TEMPY+.5)
8832 S8=(TEMPY-1)*3+(TEMPX-1)*24+1
8833 Z3=0
8890 IF MID$(SECTORMAP$,S8,3)<>A$ THEN RETURN
8900 Z3=1
8901 RETURN

9029 REM Get star system name based on coordinates - Provides region names for display
9030 IF REGIONY>4 THEN GOTO 9120
9031 IF REGIONX=1 THEN GOTO 9040
9032 IF REGIONX=2 THEN GOTO 9050
9033 IF REGIONX=3 THEN GOTO 9060
9034 IF REGIONX=4 THEN GOTO 9070
9035 IF REGIONX=5 THEN GOTO 9080
9036 IF REGIONX=6 THEN GOTO 9090
9037 IF REGIONX=7 THEN GOTO 9100
9038 IF REGIONX=8 THEN GOTO 9110
9040 NAME$="ANTARES"
9041 GOTO 9210
9050 NAME$="RIGEL"
9051 GOTO 9210
9060 NAME$="PROCYON"
9061 GOTO 9210
9070 NAME$="VEGA"
9071 GOTO 9210
9080 NAME$="CANOPUS"
9081 GOTO 9210
9090 NAME$="ALTAIR"
9091 GOTO 9210
9100 NAME$="SAGITTARIUS"
9101 GOTO 9210
9110 NAME$="POLLUX"
9111 GOTO 9210
9120 IF REGIONX=1 THEN GOTO 9130
9121 IF REGIONX=2 THEN GOTO 9140
9122 IF REGIONX=3 THEN GOTO 9150
9123 IF REGIONX=4 THEN GOTO 9160
9124 IF REGIONX=5 THEN GOTO 9170
9125 IF REGIONX=6 THEN GOTO 9180
9126 IF REGIONX=7 THEN GOTO 9190
9127 IF REGIONX=8 THEN GOTO 9200
9130 NAME$="SIRIUS"
9131 GOTO 9210
9140 NAME$="DENEB"
9141 GOTO 9210
9150 NAME$="CAPELLA"
9151 GOTO 9210
9160 NAME$="BETELGEUSE"
9161 GOTO 9210
9170 NAME$="ALDEBARAN"
9171 GOTO 9210
9180 NAME$="REGULUS"
9181 GOTO 9210
9190 NAME$="ARCTURUS"
9191 GOTO 9210
9200 NAME$="SPICA"
9210 IF BASENAMEONLY=1 THEN RETURN
9211 IF REGIONY=1 THEN GOTO 9230
9212 IF REGIONY=2 THEN GOTO 9240
9213 IF REGIONY=3 THEN GOTO 9250
9214 IF REGIONY=4 THEN GOTO 9260
9215 IF REGIONY=5 THEN GOTO 9230
9216 IF REGIONY=6 THEN GOTO 9240
9217 IF REGIONY=7 THEN GOTO 9250
9218 IF REGIONY=8 THEN GOTO 9260
9220 RETURN
9230 NAME$=NAME$+" I"
9231 RETURN
9240 NAME$=NAME$+" II"
9241 RETURN
9250 NAME$=NAME$+" III"
9251 RETURN
9260 NAME$=NAME$+" IV"
9261 RETURN
9999 END
